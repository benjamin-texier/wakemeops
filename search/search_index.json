{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"usage/","text":"Getting started Add repository Our repository is currently split into five components: desktop, dev, devops, secops, terminal . Install all five components Install terminal goodies only curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash -s terminal See script content 1 install_repository #!/usr/bin/env bash set -e if ! which gpg ; then apt-get update -yq && apt-get install -yq --no-install-recommends gnupg2 fi cat << EOF | gpg --dearmor > /etc/apt/trusted.gpg.d/wakemeops-keyring.gpg -----BEGIN PGP PUBLIC KEY BLOCK----- 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 3XB4C2E= =K/j8 -----END PGP PUBLIC KEY BLOCK----- EOF cat <<EOF > /etc/apt/sources.list.d/wakemeops.list deb http://deb.wakemeops.com/wakemeops/ stable ${@-\"dev devops secops terminal desktop\"} EOF apt-get update -yq Once the repository is added to your system, update APT cache with: sudo apt-get update Install packages You're good to go, the list of packages available on wakemeops is here . To get you started, here are a few terminal goodies that you will probably enjoy: sudo apt install yq gping bat curlie exa Basic usage Repository priority Dependending on your use case, you may want to lower the priority of the wakemeops repository to give packages from your distribution precedence over the ones from wakemeops. In other words, APT will always prefer a package from your distribution even if its version is lower than the one hosted by wakemeops. Set a low package priority Set a high package priority curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/set_repository_priority | sudo bash -s 100 curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/set_repository_priority | sudo bash -s 900 See script content 1 set_repository_priority #!/usr/bin/env bash set -e mkdir -p /etc/apt/preferences.d/ cat <<EOF > /etc/apt/preferences.d/01wakemeops Package: * Pin: origin deb.wakemeops.com Pin-Priority: ${@-\"100\"} EOF Info On Debian/Ubuntu, the default priority for repositories is 500. apt-cache policy will show you the list of installed repositories alongside their priority. List package versions Use apt-cache madison to list available versions for a given package: apt-cache madison kubectl kubectl | 1 .23.1-1~ops2deb | http://deb.wakemeops.com stable/devops amd64 Packages kubectl | 1 .23.0-1~ops2deb | http://deb.wakemeops.com stable/devops amd64 Packages kubectl | 1 .22.4-2~ops2deb | http://deb.wakemeops.com stable/devops amd64 Packages kubectl | 1 .22.3-1~ops2deb | http://deb.wakemeops.com stable/devops amd64 Packages kubectl | 1 .22.2-1~ops2deb | http://deb.wakemeops.com stable/devops amd64 Packages Pin down package versions APT lets you select the version you wish to install with the following syntaxe: sudo apt install <package name> = <version> Using wildcards is supported: kubectl >=1.22.0,<1.23.0 kubectl >=1.0.0,<2.0.0 kubectl == 1.23.1 sudo apt install \"kubectl=1.22*\" sudo apt install \"kubectl=1*\" sudo apt install \"kubectl=1.23.1*\" Warning We only keep the latest revision of each package, beware that pinning down the exact package version in a CI pipeline may eventually break. In a CI pipeline, you should always use a wildcard permissive enough to let APT use the latest package revision. The revision is the number after the last hyphen in a package version (example: 1.23.1- 1 ~ops2deb). The revision is not part of the application version, it basically is an iteration of the Debian package. In Debian distributions reasons to bump the revision of a package include: packaging errors, backports of patches and security patches... In short: sudo apt-get install -yq kubectl=1.23.1* sudo apt-get install -yq kubectl=1.23.1-1~ops2deb Docker images Image tags We provide docker images based on Debian and Ubuntu that come pre-configured with WakeMeOps repository: Debian Ubuntu Minideb latest buster buster-slim bullseye bullseye-slim bookworm bookworm-slim https://hub.docker.com/r/wakemeops/debian/tags?name=latest docker pull wakemeops/debian:latest https://hub.docker.com/r/wakemeops/debian/tags?name=buster docker pull wakemeops/debian:buster https://hub.docker.com/r/wakemeops/debian/tags?name=buster-slim docker pull wakemeops/debian:buster-slim https://hub.docker.com/r/wakemeops/debian/tags?name=bullseye docker pull wakemeops/debian:bullseye https://hub.docker.com/r/wakemeops/debian/tags?name=bullseye-slim docker pull wakemeops/debian:bullseye-slim https://hub.docker.com/r/wakemeops/debian/tags?name=bookworm docker pull wakemeops/debian:bookworm https://hub.docker.com/r/wakemeops/debian/tags?name=bookworm-slim docker pull wakemeops/debian:bookworm-slim latest rolling 18.04 20.04 22.04 https://hub.docker.com/r/wakemeops/ubuntu/tags?name=latest docker pull wakemeops/ubuntu:latest https://hub.docker.com/r/wakemeops/ubuntu/tags?name=rolling docker pull wakemeops/ubuntu:rolling https://hub.docker.com/r/wakemeops/ubuntu/tags?name=18.04 docker pull wakemeops/ubuntu:18.04 https://hub.docker.com/r/wakemeops/ubuntu/tags?name=20.04 docker pull wakemeops/ubuntu:20.04 https://hub.docker.com/r/wakemeops/ubuntu/tags?name=22.04 docker pull wakemeops/ubuntu:22.04 latest buster bullseye https://hub.docker.com/r/wakemeops/minideb/tags?name=latest docker pull wakemeops/minideb:latest https://hub.docker.com/r/wakemeops/minideb/tags?name=buster docker pull wakemeops/minideb:buster https://hub.docker.com/r/wakemeops/minideb/tags?name=bullseye docker pull wakemeops/minideb:bullseye Info WakeMeOps images are rebuilt every day from this Dockerfile to keep track of the latest changes - such as security fixes - in upstream images. Write Dockerfiles All docker images include a thin wrapper around apt-get install named install_packages . It adds retries and does the usual apt-get update followed by rm -r /var/lib/apt/lists /var/cache/apt/archives . This handy script comes from the bitnami minideb image . See script content 1 install_packages # taken from https://github.com/bitnami/minideb/blob/master/mkimage #!/bin/sh set -e set -u export DEBIAN_FRONTEND = noninteractive n = 0 max = 2 until [ $n -gt $max ] ; do set +e ( apt-get update -qq && apt-get install -y --no-install-recommends \" $@ \" ) CODE = $? set -e if [ $CODE -eq 0 ] ; then break fi if [ $n -eq $max ] ; then exit $CODE fi echo \"apt failed, retrying\" n = $(( $n + 1 )) done rm -r /var/lib/apt/lists /var/cache/apt/archives You can leverage this script to write very short dockerfiles for your CI: I'm careful I like to live on the edge FROM wakemeops/debian:bullseye RUN install_packages \\ helm = 3 .7.2* \\ kustomize = 4 .4.1* \\ kubectl = 1 .23.1* USER 1001 FROM wakemeops/debian:latest RUN install_packages helm kustomize kubectl The script content is inserted using the markdown extension pymdownx.snippets when the documentationis built in our CI. The actual content may differ. \u21a9 \u21a9 \u21a9","title":"Usage"},{"location":"usage/#getting-started","text":"","title":"Getting started"},{"location":"usage/#add-repository","text":"Our repository is currently split into five components: desktop, dev, devops, secops, terminal . Install all five components Install terminal goodies only curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash -s terminal See script content 1 install_repository #!/usr/bin/env bash set -e if ! which gpg ; then apt-get update -yq && apt-get install -yq --no-install-recommends gnupg2 fi cat << EOF | gpg --dearmor > /etc/apt/trusted.gpg.d/wakemeops-keyring.gpg -----BEGIN PGP PUBLIC KEY BLOCK----- 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 3XB4C2E= =K/j8 -----END PGP PUBLIC KEY BLOCK----- EOF cat <<EOF > /etc/apt/sources.list.d/wakemeops.list deb http://deb.wakemeops.com/wakemeops/ stable ${@-\"dev devops secops terminal desktop\"} EOF apt-get update -yq Once the repository is added to your system, update APT cache with: sudo apt-get update","title":"Add repository"},{"location":"usage/#install-packages","text":"You're good to go, the list of packages available on wakemeops is here . To get you started, here are a few terminal goodies that you will probably enjoy: sudo apt install yq gping bat curlie exa","title":"Install packages"},{"location":"usage/#basic-usage","text":"","title":"Basic usage"},{"location":"usage/#repository-priority","text":"Dependending on your use case, you may want to lower the priority of the wakemeops repository to give packages from your distribution precedence over the ones from wakemeops. In other words, APT will always prefer a package from your distribution even if its version is lower than the one hosted by wakemeops. Set a low package priority Set a high package priority curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/set_repository_priority | sudo bash -s 100 curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/set_repository_priority | sudo bash -s 900 See script content 1 set_repository_priority #!/usr/bin/env bash set -e mkdir -p /etc/apt/preferences.d/ cat <<EOF > /etc/apt/preferences.d/01wakemeops Package: * Pin: origin deb.wakemeops.com Pin-Priority: ${@-\"100\"} EOF Info On Debian/Ubuntu, the default priority for repositories is 500. apt-cache policy will show you the list of installed repositories alongside their priority.","title":"Repository priority"},{"location":"usage/#list-package-versions","text":"Use apt-cache madison to list available versions for a given package: apt-cache madison kubectl kubectl | 1 .23.1-1~ops2deb | http://deb.wakemeops.com stable/devops amd64 Packages kubectl | 1 .23.0-1~ops2deb | http://deb.wakemeops.com stable/devops amd64 Packages kubectl | 1 .22.4-2~ops2deb | http://deb.wakemeops.com stable/devops amd64 Packages kubectl | 1 .22.3-1~ops2deb | http://deb.wakemeops.com stable/devops amd64 Packages kubectl | 1 .22.2-1~ops2deb | http://deb.wakemeops.com stable/devops amd64 Packages","title":"List package versions"},{"location":"usage/#pin-down-package-versions","text":"APT lets you select the version you wish to install with the following syntaxe: sudo apt install <package name> = <version> Using wildcards is supported: kubectl >=1.22.0,<1.23.0 kubectl >=1.0.0,<2.0.0 kubectl == 1.23.1 sudo apt install \"kubectl=1.22*\" sudo apt install \"kubectl=1*\" sudo apt install \"kubectl=1.23.1*\" Warning We only keep the latest revision of each package, beware that pinning down the exact package version in a CI pipeline may eventually break. In a CI pipeline, you should always use a wildcard permissive enough to let APT use the latest package revision. The revision is the number after the last hyphen in a package version (example: 1.23.1- 1 ~ops2deb). The revision is not part of the application version, it basically is an iteration of the Debian package. In Debian distributions reasons to bump the revision of a package include: packaging errors, backports of patches and security patches... In short: sudo apt-get install -yq kubectl=1.23.1* sudo apt-get install -yq kubectl=1.23.1-1~ops2deb","title":"Pin down package versions"},{"location":"usage/#docker-images","text":"","title":"Docker images"},{"location":"usage/#image-tags","text":"We provide docker images based on Debian and Ubuntu that come pre-configured with WakeMeOps repository: Debian Ubuntu Minideb latest buster buster-slim bullseye bullseye-slim bookworm bookworm-slim https://hub.docker.com/r/wakemeops/debian/tags?name=latest docker pull wakemeops/debian:latest https://hub.docker.com/r/wakemeops/debian/tags?name=buster docker pull wakemeops/debian:buster https://hub.docker.com/r/wakemeops/debian/tags?name=buster-slim docker pull wakemeops/debian:buster-slim https://hub.docker.com/r/wakemeops/debian/tags?name=bullseye docker pull wakemeops/debian:bullseye https://hub.docker.com/r/wakemeops/debian/tags?name=bullseye-slim docker pull wakemeops/debian:bullseye-slim https://hub.docker.com/r/wakemeops/debian/tags?name=bookworm docker pull wakemeops/debian:bookworm https://hub.docker.com/r/wakemeops/debian/tags?name=bookworm-slim docker pull wakemeops/debian:bookworm-slim latest rolling 18.04 20.04 22.04 https://hub.docker.com/r/wakemeops/ubuntu/tags?name=latest docker pull wakemeops/ubuntu:latest https://hub.docker.com/r/wakemeops/ubuntu/tags?name=rolling docker pull wakemeops/ubuntu:rolling https://hub.docker.com/r/wakemeops/ubuntu/tags?name=18.04 docker pull wakemeops/ubuntu:18.04 https://hub.docker.com/r/wakemeops/ubuntu/tags?name=20.04 docker pull wakemeops/ubuntu:20.04 https://hub.docker.com/r/wakemeops/ubuntu/tags?name=22.04 docker pull wakemeops/ubuntu:22.04 latest buster bullseye https://hub.docker.com/r/wakemeops/minideb/tags?name=latest docker pull wakemeops/minideb:latest https://hub.docker.com/r/wakemeops/minideb/tags?name=buster docker pull wakemeops/minideb:buster https://hub.docker.com/r/wakemeops/minideb/tags?name=bullseye docker pull wakemeops/minideb:bullseye Info WakeMeOps images are rebuilt every day from this Dockerfile to keep track of the latest changes - such as security fixes - in upstream images.","title":"Image tags"},{"location":"usage/#write-dockerfiles","text":"All docker images include a thin wrapper around apt-get install named install_packages . It adds retries and does the usual apt-get update followed by rm -r /var/lib/apt/lists /var/cache/apt/archives . This handy script comes from the bitnami minideb image . See script content 1 install_packages # taken from https://github.com/bitnami/minideb/blob/master/mkimage #!/bin/sh set -e set -u export DEBIAN_FRONTEND = noninteractive n = 0 max = 2 until [ $n -gt $max ] ; do set +e ( apt-get update -qq && apt-get install -y --no-install-recommends \" $@ \" ) CODE = $? set -e if [ $CODE -eq 0 ] ; then break fi if [ $n -eq $max ] ; then exit $CODE fi echo \"apt failed, retrying\" n = $(( $n + 1 )) done rm -r /var/lib/apt/lists /var/cache/apt/archives You can leverage this script to write very short dockerfiles for your CI: I'm careful I like to live on the edge FROM wakemeops/debian:bullseye RUN install_packages \\ helm = 3 .7.2* \\ kustomize = 4 .4.1* \\ kubectl = 1 .23.1* USER 1001 FROM wakemeops/debian:latest RUN install_packages helm kustomize kubectl The script content is inserted using the markdown extension pymdownx.snippets when the documentationis built in our CI. The actual content may differ. \u21a9 \u21a9 \u21a9","title":"Write Dockerfiles"},{"location":"packages/","text":"97 packages Desktop 3 packages. Name Summary Version balena-etcher Flash os images to sd cards and usb drives, safely and easily 1.7.9 lens Powerful ide for kubernetes 5.4.6-l... mattermost-desktop Desktop application for mattermost 5.1.0 Dev 12 packages. Name Summary Version clog-cli Generate beautiful changelogs from your git commit history 0.9.3 coursier Scala application and artifact manager 2.1.0-M6 datanymizer Powerful postgres database anonymizer with flexible rules 0.5.1 github-cli Github on the command line 2.11.3 github-hub Do everyday github tasks without ever leaving the terminal 2.14.2 glab Gitlab on the command line 1.22.0 hugo Fast and flexible static site generator 0.100.1 mask Command-line task runner defined by a simple markdown file 0.11.2 poetry Tool for dependency management and packaging in python 1.1.13 pyenv Simple python version management 2.3.1 pyoxidizer Pyoxidizer is a utility for producing binaries that embed python 0.18.0 scala-cli Command-line tool to interact with the scala language 0.1.6 Devops 52 packages. Name Summary Version argocd Continuous delivery tool for kubernetes 2.3.4 bank-vaults Make using and operating hashicorp vault easier on kubernetes. 1.15.2 carvel-kapp Simple deployment tool focused on the concept of \"kubernetes application\" 0.48.0 carvel-ytt Yaml templating tool that works on yaml structure instead of text 0.41.1 container-diff Diff your docker containers 0.17.0 container-structure-test Validate the structure of your container images 1.11.0 datree Prevent kubernetes misconfigurations from reaching production 1.4.37 devspace Developer tool for kubernetes 5.18.5 docker-compose Lightweight development environments using docker 2.6.0 docker-slim Minify docker images by up to 30x 1.37.6 flux Open and extensible continuous delivery solution for kubernetes 0.30.2 gitlab-release-cli Command-line interface for gitlab release 0.11.0 helm Kubernetes package manager 3.9.0 helmfile Deploy kubernetes helm charts 0.144.0 iamlive Generate policies from aws calls 0.47.3 istioctl Command-line interface for istio 1.14.0 k3d Run rancher lab's k3s in docker 5.4.2 k9s Manage your kubernetes clusters with style 0.25.18 kind Deploy kubernetes cluster in docker 0.14.0 kompose Convert docker-compose.yaml into k8s deployments and services 1.26.1 krew Find and install kubectl plugins 0.4.3 kube-score Kubernetes object analysis for improved reliability and security 1.14.0 kubectl Command line client for controlling a kubernetes cluster 1.24.1 kubectl-kudo Kubernetes universal declarative operator 0.19.0 kubectl-neat Clean up kubernetes yaml and json output to make it readable 2.0.3 kubectx Kubectl plugin that helps you switch between clusters 0.9.4 kubens Kubectl plugin that helps you switch between namespaces 0.9.4 kubeseal Secret management solution for kubernetes 0.18.0 kustomize Kubernetes native configuration management 4.5.5 lazydocker A lazier way to manage everything docker 0.18.1 linkerd Ultralight service mesh for kubernetes 21.12.4 logcli Command-line interface for loki 2.5.0 minikube Quickly set up a local kubernetes cluster 1.25.2 minio-client Command-line interface for minio (mc) 2022-04... minio-server High performance, kubernetes native object storage 2022-04... natscli The nats command line interface 0.0.26 operator-sdk Sdk for building kubernetes applications 1.21.0 ops2deb Debian packaging tool for portable applications 0.30.0 packer Create multi-platform machine images from a single source configuration 1.8.1 rancher Command-line interface for rancher 2.6.5 rclone Rsync for cloud storage 1.58.1 scw Command line interface for scaleway 2.4.0 skaffold Easy and repeatable kubernetes development 1.38.0 stern Multi pod and container log tailing for kubernetes 1.11.0 telepresence Fast, local development for kubernetes and openshift microservices 2.6.5 terraform Tool for building, changing, and versioning infrastructure safely 1.2.2 terraform-docs Generate documentation from terraform modules in various output formats 0.16.0 terragrunt Provides extra tools for working with multiple terraform modules 0.37.1 vault-env Exec a process with vault sourced env vars 1.15.2 velero Backup and migrate kubernetes applications and their persistent volumes 1.8.1 wakemebot Bunch of tools used by our beloved wakemebot 3.1.0 waypoint Build, deploy, and release any application on any platform 0.8.2 Secops 5 packages. Name Summary Version boundary Provide simple and secure access to hosts and services 0.8.1 feroxbuster Fast, simple, recursive content discovery tool 2.6.4 trivy Vulnerability and misconfiguration scanner 0.28.1 vault Tool to create, manage and store secrets 1.10.3 vuls-scanner Agent-less vulnerability scanner 0.19.7 Terminal 25 packages. Name Summary Version bat Cat replacement with syntax highlighting 0.21.0 bottom Cross-platform graphical process/system monitor 0.6.8 chezmoi Manage your dotfiles across multiple diverse machines 2.17.1 choose Human-friendly and fast alternative to cut and sometimes awk 1.3.4 curlie The power of 'curl', the ease of use of 'httpie' 1.6.9 diskonaut Terminal disk space navigator 0.11.0 dog Command-line dns client 0.1.0 dust Human-friendly and fast alternative to 'du' 0.8.1-alpha.2 exa Modern replacement for ls 0.10.1 fd Human-friendly and fast alternative to 'find' 8.4.0 ghorg Quickly clone an entire org/users repositories into one directory 1.7.16 git-delta Syntax-highlighting pager for git, diff, and grep output 0.13.0 gping Ping, but with a graph 1.3.1 grex Command-line tool and library for generating regular expressions 1.3.0 himalaya Command-line interface for email management 0.5.10 hostctl Manage /etc/hosts from cli 1.1.2 mdbook Create book from markdown files 0.4.18 mergestat Enables sql queries for data in git repositories 0.5.6 procs Alternative in rust to 'ps' 0.12.1 ripgrep Recursively searches directories for a regex pattern 13.0.0 skim Fuzzy finder in rust 0.9.4 tokei Count your code, quickly 12.1.2 xh User-friendly and fast tool for sending http requests 0.16.1 xsv A fast csv command line toolkit 0.13.0 yq Portable command-line yaml processor 4.25.2","title":"Overview"},{"location":"packages/#97-packages","text":"","title":"97 packages"},{"location":"packages/#desktop","text":"3 packages. Name Summary Version balena-etcher Flash os images to sd cards and usb drives, safely and easily 1.7.9 lens Powerful ide for kubernetes 5.4.6-l... mattermost-desktop Desktop application for mattermost 5.1.0","title":"Desktop"},{"location":"packages/#dev","text":"12 packages. Name Summary Version clog-cli Generate beautiful changelogs from your git commit history 0.9.3 coursier Scala application and artifact manager 2.1.0-M6 datanymizer Powerful postgres database anonymizer with flexible rules 0.5.1 github-cli Github on the command line 2.11.3 github-hub Do everyday github tasks without ever leaving the terminal 2.14.2 glab Gitlab on the command line 1.22.0 hugo Fast and flexible static site generator 0.100.1 mask Command-line task runner defined by a simple markdown file 0.11.2 poetry Tool for dependency management and packaging in python 1.1.13 pyenv Simple python version management 2.3.1 pyoxidizer Pyoxidizer is a utility for producing binaries that embed python 0.18.0 scala-cli Command-line tool to interact with the scala language 0.1.6","title":"Dev"},{"location":"packages/#devops","text":"52 packages. Name Summary Version argocd Continuous delivery tool for kubernetes 2.3.4 bank-vaults Make using and operating hashicorp vault easier on kubernetes. 1.15.2 carvel-kapp Simple deployment tool focused on the concept of \"kubernetes application\" 0.48.0 carvel-ytt Yaml templating tool that works on yaml structure instead of text 0.41.1 container-diff Diff your docker containers 0.17.0 container-structure-test Validate the structure of your container images 1.11.0 datree Prevent kubernetes misconfigurations from reaching production 1.4.37 devspace Developer tool for kubernetes 5.18.5 docker-compose Lightweight development environments using docker 2.6.0 docker-slim Minify docker images by up to 30x 1.37.6 flux Open and extensible continuous delivery solution for kubernetes 0.30.2 gitlab-release-cli Command-line interface for gitlab release 0.11.0 helm Kubernetes package manager 3.9.0 helmfile Deploy kubernetes helm charts 0.144.0 iamlive Generate policies from aws calls 0.47.3 istioctl Command-line interface for istio 1.14.0 k3d Run rancher lab's k3s in docker 5.4.2 k9s Manage your kubernetes clusters with style 0.25.18 kind Deploy kubernetes cluster in docker 0.14.0 kompose Convert docker-compose.yaml into k8s deployments and services 1.26.1 krew Find and install kubectl plugins 0.4.3 kube-score Kubernetes object analysis for improved reliability and security 1.14.0 kubectl Command line client for controlling a kubernetes cluster 1.24.1 kubectl-kudo Kubernetes universal declarative operator 0.19.0 kubectl-neat Clean up kubernetes yaml and json output to make it readable 2.0.3 kubectx Kubectl plugin that helps you switch between clusters 0.9.4 kubens Kubectl plugin that helps you switch between namespaces 0.9.4 kubeseal Secret management solution for kubernetes 0.18.0 kustomize Kubernetes native configuration management 4.5.5 lazydocker A lazier way to manage everything docker 0.18.1 linkerd Ultralight service mesh for kubernetes 21.12.4 logcli Command-line interface for loki 2.5.0 minikube Quickly set up a local kubernetes cluster 1.25.2 minio-client Command-line interface for minio (mc) 2022-04... minio-server High performance, kubernetes native object storage 2022-04... natscli The nats command line interface 0.0.26 operator-sdk Sdk for building kubernetes applications 1.21.0 ops2deb Debian packaging tool for portable applications 0.30.0 packer Create multi-platform machine images from a single source configuration 1.8.1 rancher Command-line interface for rancher 2.6.5 rclone Rsync for cloud storage 1.58.1 scw Command line interface for scaleway 2.4.0 skaffold Easy and repeatable kubernetes development 1.38.0 stern Multi pod and container log tailing for kubernetes 1.11.0 telepresence Fast, local development for kubernetes and openshift microservices 2.6.5 terraform Tool for building, changing, and versioning infrastructure safely 1.2.2 terraform-docs Generate documentation from terraform modules in various output formats 0.16.0 terragrunt Provides extra tools for working with multiple terraform modules 0.37.1 vault-env Exec a process with vault sourced env vars 1.15.2 velero Backup and migrate kubernetes applications and their persistent volumes 1.8.1 wakemebot Bunch of tools used by our beloved wakemebot 3.1.0 waypoint Build, deploy, and release any application on any platform 0.8.2","title":"Devops"},{"location":"packages/#secops","text":"5 packages. Name Summary Version boundary Provide simple and secure access to hosts and services 0.8.1 feroxbuster Fast, simple, recursive content discovery tool 2.6.4 trivy Vulnerability and misconfiguration scanner 0.28.1 vault Tool to create, manage and store secrets 1.10.3 vuls-scanner Agent-less vulnerability scanner 0.19.7","title":"Secops"},{"location":"packages/#terminal","text":"25 packages. Name Summary Version bat Cat replacement with syntax highlighting 0.21.0 bottom Cross-platform graphical process/system monitor 0.6.8 chezmoi Manage your dotfiles across multiple diverse machines 2.17.1 choose Human-friendly and fast alternative to cut and sometimes awk 1.3.4 curlie The power of 'curl', the ease of use of 'httpie' 1.6.9 diskonaut Terminal disk space navigator 0.11.0 dog Command-line dns client 0.1.0 dust Human-friendly and fast alternative to 'du' 0.8.1-alpha.2 exa Modern replacement for ls 0.10.1 fd Human-friendly and fast alternative to 'find' 8.4.0 ghorg Quickly clone an entire org/users repositories into one directory 1.7.16 git-delta Syntax-highlighting pager for git, diff, and grep output 0.13.0 gping Ping, but with a graph 1.3.1 grex Command-line tool and library for generating regular expressions 1.3.0 himalaya Command-line interface for email management 0.5.10 hostctl Manage /etc/hosts from cli 1.1.2 mdbook Create book from markdown files 0.4.18 mergestat Enables sql queries for data in git repositories 0.5.6 procs Alternative in rust to 'ps' 0.12.1 ripgrep Recursively searches directories for a regex pattern 13.0.0 skim Fuzzy finder in rust 0.9.4 tokei Count your code, quickly 12.1.2 xh User-friendly and fast tool for sending http requests 0.16.1 xsv A fast csv command line toolkit 0.13.0 yq Portable command-line yaml processor 4.25.2","title":"Terminal"},{"location":"packages/argocd/","text":"argocd Continuous delivery tool for Kubernetes Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. devops https://github.com/argoproj/argo-cd amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install argocd sudo apt install argocd Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ argocd = 2 .3.4* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | argocd=2.3.4* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/argocd.svg )](https://docs.wakemeops.com/packages/argocd) < a href = \"https://docs.wakemeops.com/packages/argocd\" > < img src = \"https://docs.wakemeops.com/badges/argocd.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/argocd.svg :target: https://docs.wakemeops.com/packages/argocd","title":"argocd"},{"location":"packages/argocd/#argocd","text":"Continuous delivery tool for Kubernetes Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. devops https://github.com/argoproj/argo-cd amd64","title":"argocd"},{"location":"packages/argocd/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install argocd sudo apt install argocd","title":"Installation"},{"location":"packages/argocd/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ argocd = 2 .3.4* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | argocd=2.3.4*","title":"Snippets"},{"location":"packages/argocd/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/argocd.svg )](https://docs.wakemeops.com/packages/argocd) < a href = \"https://docs.wakemeops.com/packages/argocd\" > < img src = \"https://docs.wakemeops.com/badges/argocd.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/argocd.svg :target: https://docs.wakemeops.com/packages/argocd","title":"Badge"},{"location":"packages/balena-etcher/","text":"balena-etcher Flash OS images to SD cards and USB drives, safely and easily balenaEtcher is built with web technologies to ensure flashing an SDCard or USB drive is a pleasant and safe experience. It protects you from accidentally writing to your hard-drives, ensures every byte of data was written correctly and much more. desktop https://github.com/balena-io/etcher amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install balena-etcher sudo apt install balena-etcher Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/balena-etcher.svg )](https://docs.wakemeops.com/packages/balena-etcher) < a href = \"https://docs.wakemeops.com/packages/balena-etcher\" > < img src = \"https://docs.wakemeops.com/badges/balena-etcher.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/balena-etcher.svg :target: https://docs.wakemeops.com/packages/balena-etcher","title":"balena-etcher"},{"location":"packages/balena-etcher/#balena-etcher","text":"Flash OS images to SD cards and USB drives, safely and easily balenaEtcher is built with web technologies to ensure flashing an SDCard or USB drive is a pleasant and safe experience. It protects you from accidentally writing to your hard-drives, ensures every byte of data was written correctly and much more. desktop https://github.com/balena-io/etcher amd64","title":"balena-etcher"},{"location":"packages/balena-etcher/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install balena-etcher sudo apt install balena-etcher","title":"Installation"},{"location":"packages/balena-etcher/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/balena-etcher.svg )](https://docs.wakemeops.com/packages/balena-etcher) < a href = \"https://docs.wakemeops.com/packages/balena-etcher\" > < img src = \"https://docs.wakemeops.com/badges/balena-etcher.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/balena-etcher.svg :target: https://docs.wakemeops.com/packages/balena-etcher","title":"Badge"},{"location":"packages/bank-vaults/","text":"bank-vaults Make using and operating Hashicorp Vault easier on Kubernetes. Bank Vaults is a thick, tricky, shifty right with a fast and intense tube for experienced surfers only, located on Mentawai. Think heavy steel doors, secret unlocking combinations and burly guards with smack-down attitude. Watch out for clean-up sets. devops https://banzaicloud.com/products/bank-vaults/ arm64 amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install bank-vaults sudo apt install bank-vaults Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ bank-vaults = 1 .15.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | bank-vaults=1.15.2* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/bank-vaults.svg )](https://docs.wakemeops.com/packages/bank-vaults) < a href = \"https://docs.wakemeops.com/packages/bank-vaults\" > < img src = \"https://docs.wakemeops.com/badges/bank-vaults.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/bank-vaults.svg :target: https://docs.wakemeops.com/packages/bank-vaults","title":"bank-vaults"},{"location":"packages/bank-vaults/#bank-vaults","text":"Make using and operating Hashicorp Vault easier on Kubernetes. Bank Vaults is a thick, tricky, shifty right with a fast and intense tube for experienced surfers only, located on Mentawai. Think heavy steel doors, secret unlocking combinations and burly guards with smack-down attitude. Watch out for clean-up sets. devops https://banzaicloud.com/products/bank-vaults/ arm64 amd64","title":"bank-vaults"},{"location":"packages/bank-vaults/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install bank-vaults sudo apt install bank-vaults","title":"Installation"},{"location":"packages/bank-vaults/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ bank-vaults = 1 .15.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | bank-vaults=1.15.2*","title":"Snippets"},{"location":"packages/bank-vaults/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/bank-vaults.svg )](https://docs.wakemeops.com/packages/bank-vaults) < a href = \"https://docs.wakemeops.com/packages/bank-vaults\" > < img src = \"https://docs.wakemeops.com/badges/bank-vaults.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/bank-vaults.svg :target: https://docs.wakemeops.com/packages/bank-vaults","title":"Badge"},{"location":"packages/bat/","text":"bat Cat replacement with syntax highlighting Supports syntax highlighting for a large number of programming and markup languages and communicates with git to show modifications with respect to the index. terminal https://github.com/sharkdp/bat arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install bat sudo apt install bat Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ bat = 0 .21.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | bat=0.21.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/bat.svg )](https://docs.wakemeops.com/packages/bat) < a href = \"https://docs.wakemeops.com/packages/bat\" > < img src = \"https://docs.wakemeops.com/badges/bat.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/bat.svg :target: https://docs.wakemeops.com/packages/bat","title":"bat"},{"location":"packages/bat/#bat","text":"Cat replacement with syntax highlighting Supports syntax highlighting for a large number of programming and markup languages and communicates with git to show modifications with respect to the index. terminal https://github.com/sharkdp/bat arm64 amd64 armhf","title":"bat"},{"location":"packages/bat/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install bat sudo apt install bat","title":"Installation"},{"location":"packages/bat/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ bat = 0 .21.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | bat=0.21.0*","title":"Snippets"},{"location":"packages/bat/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/bat.svg )](https://docs.wakemeops.com/packages/bat) < a href = \"https://docs.wakemeops.com/packages/bat\" > < img src = \"https://docs.wakemeops.com/badges/bat.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/bat.svg :target: https://docs.wakemeops.com/packages/bat","title":"Badge"},{"location":"packages/bottom/","text":"bottom Cross-platform graphical process/system monitor A cross-platform graphical process/system monitor with a customizable interface and a multitude of features. Supports Linux, macOS, and Windows. Inspired by gtop, gotop, and htop. terminal https://clementtsang.github.io/bottom amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install bottom sudo apt install bottom Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ bottom = 0 .6.8* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | bottom=0.6.8* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/bottom.svg )](https://docs.wakemeops.com/packages/bottom) < a href = \"https://docs.wakemeops.com/packages/bottom\" > < img src = \"https://docs.wakemeops.com/badges/bottom.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/bottom.svg :target: https://docs.wakemeops.com/packages/bottom","title":"bottom"},{"location":"packages/bottom/#bottom","text":"Cross-platform graphical process/system monitor A cross-platform graphical process/system monitor with a customizable interface and a multitude of features. Supports Linux, macOS, and Windows. Inspired by gtop, gotop, and htop. terminal https://clementtsang.github.io/bottom amd64 armhf","title":"bottom"},{"location":"packages/bottom/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install bottom sudo apt install bottom","title":"Installation"},{"location":"packages/bottom/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ bottom = 0 .6.8* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | bottom=0.6.8*","title":"Snippets"},{"location":"packages/bottom/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/bottom.svg )](https://docs.wakemeops.com/packages/bottom) < a href = \"https://docs.wakemeops.com/packages/bottom\" > < img src = \"https://docs.wakemeops.com/badges/bottom.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/bottom.svg :target: https://docs.wakemeops.com/packages/bottom","title":"Badge"},{"location":"packages/boundary/","text":"boundary Provide simple and secure access to hosts and services Traditional approaches like SSH bastion hosts or VPNs require distributing and managing credentials, configuring network controls like firewalls, and exposing the private network. Boundary provides a secure way to access hosts and critical systems without having to manage credentials or expose your network, and is entirely open source. Boundary is designed to be straightforward to understand, highly scalable, and resilient. It can run in clouds, on-prem, secure enclaves and more, and does not require an agent to be installed on every end host. secops https://www.boundaryproject.io arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install boundary sudo apt install boundary Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ boundary = 0 .8.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | boundary=0.8.1* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/boundary.svg )](https://docs.wakemeops.com/packages/boundary) < a href = \"https://docs.wakemeops.com/packages/boundary\" > < img src = \"https://docs.wakemeops.com/badges/boundary.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/boundary.svg :target: https://docs.wakemeops.com/packages/boundary","title":"boundary"},{"location":"packages/boundary/#boundary","text":"Provide simple and secure access to hosts and services Traditional approaches like SSH bastion hosts or VPNs require distributing and managing credentials, configuring network controls like firewalls, and exposing the private network. Boundary provides a secure way to access hosts and critical systems without having to manage credentials or expose your network, and is entirely open source. Boundary is designed to be straightforward to understand, highly scalable, and resilient. It can run in clouds, on-prem, secure enclaves and more, and does not require an agent to be installed on every end host. secops https://www.boundaryproject.io arm64 amd64 armhf","title":"boundary"},{"location":"packages/boundary/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install boundary sudo apt install boundary","title":"Installation"},{"location":"packages/boundary/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ boundary = 0 .8.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | boundary=0.8.1*","title":"Snippets"},{"location":"packages/boundary/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/boundary.svg )](https://docs.wakemeops.com/packages/boundary) < a href = \"https://docs.wakemeops.com/packages/boundary\" > < img src = \"https://docs.wakemeops.com/badges/boundary.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/boundary.svg :target: https://docs.wakemeops.com/packages/boundary","title":"Badge"},{"location":"packages/carvel-kapp/","text":"carvel-kapp Simple deployment tool focused on the concept of \"Kubernetes application\" Take control of your Kubernetes resources. Deploy and view groups of Kubernetes resources as \"applications\". Apply changes safely and predictably, watching resources as they converge. devops https://carvel.dev/kapp/ arm64 amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install carvel-kapp sudo apt install carvel-kapp Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ carvel-kapp = 0 .48.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | carvel-kapp=0.48.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/carvel-kapp.svg )](https://docs.wakemeops.com/packages/carvel-kapp) < a href = \"https://docs.wakemeops.com/packages/carvel-kapp\" > < img src = \"https://docs.wakemeops.com/badges/carvel-kapp.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/carvel-kapp.svg :target: https://docs.wakemeops.com/packages/carvel-kapp","title":"carvel-kapp"},{"location":"packages/carvel-kapp/#carvel-kapp","text":"Simple deployment tool focused on the concept of \"Kubernetes application\" Take control of your Kubernetes resources. Deploy and view groups of Kubernetes resources as \"applications\". Apply changes safely and predictably, watching resources as they converge. devops https://carvel.dev/kapp/ arm64 amd64","title":"carvel-kapp"},{"location":"packages/carvel-kapp/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install carvel-kapp sudo apt install carvel-kapp","title":"Installation"},{"location":"packages/carvel-kapp/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ carvel-kapp = 0 .48.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | carvel-kapp=0.48.0*","title":"Snippets"},{"location":"packages/carvel-kapp/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/carvel-kapp.svg )](https://docs.wakemeops.com/packages/carvel-kapp) < a href = \"https://docs.wakemeops.com/packages/carvel-kapp\" > < img src = \"https://docs.wakemeops.com/badges/carvel-kapp.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/carvel-kapp.svg :target: https://docs.wakemeops.com/packages/carvel-kapp","title":"Badge"},{"location":"packages/carvel-ytt/","text":"carvel-ytt YAML templating tool that works on YAML structure instead of text All your YAML shaping in one tool Template and patch as needed to easily make your configuration reusable and extensible. Works with your own and third-party YAML configuration. devops https://carvel.dev/ytt/ arm64 amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install carvel-ytt sudo apt install carvel-ytt Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ carvel-ytt = 0 .41.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | carvel-ytt=0.41.1* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/carvel-ytt.svg )](https://docs.wakemeops.com/packages/carvel-ytt) < a href = \"https://docs.wakemeops.com/packages/carvel-ytt\" > < img src = \"https://docs.wakemeops.com/badges/carvel-ytt.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/carvel-ytt.svg :target: https://docs.wakemeops.com/packages/carvel-ytt","title":"carvel-ytt"},{"location":"packages/carvel-ytt/#carvel-ytt","text":"YAML templating tool that works on YAML structure instead of text All your YAML shaping in one tool Template and patch as needed to easily make your configuration reusable and extensible. Works with your own and third-party YAML configuration. devops https://carvel.dev/ytt/ arm64 amd64","title":"carvel-ytt"},{"location":"packages/carvel-ytt/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install carvel-ytt sudo apt install carvel-ytt","title":"Installation"},{"location":"packages/carvel-ytt/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ carvel-ytt = 0 .41.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | carvel-ytt=0.41.1*","title":"Snippets"},{"location":"packages/carvel-ytt/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/carvel-ytt.svg )](https://docs.wakemeops.com/packages/carvel-ytt) < a href = \"https://docs.wakemeops.com/packages/carvel-ytt\" > < img src = \"https://docs.wakemeops.com/badges/carvel-ytt.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/carvel-ytt.svg :target: https://docs.wakemeops.com/packages/carvel-ytt","title":"Badge"},{"location":"packages/chezmoi/","text":"chezmoi Manage your dotfiles across multiple diverse machines Lets you install and update your personal configuration files on multiple machines with a single command. chezmoi is helpful if you have spent time customizing the tools you use (e.g. shells, editors, and version control systems) and want to keep machines running different accounts (e.g. home and work) and/or different operating systems (e.g. Linux, macOS, and Windows) in sync, while still being able to easily cope with differences from machine to machine. terminal https://github.com/twpayne/chezmoi arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install chezmoi sudo apt install chezmoi Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ chezmoi = 2 .17.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | chezmoi=2.17.1* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/chezmoi.svg )](https://docs.wakemeops.com/packages/chezmoi) < a href = \"https://docs.wakemeops.com/packages/chezmoi\" > < img src = \"https://docs.wakemeops.com/badges/chezmoi.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/chezmoi.svg :target: https://docs.wakemeops.com/packages/chezmoi","title":"chezmoi"},{"location":"packages/chezmoi/#chezmoi","text":"Manage your dotfiles across multiple diverse machines Lets you install and update your personal configuration files on multiple machines with a single command. chezmoi is helpful if you have spent time customizing the tools you use (e.g. shells, editors, and version control systems) and want to keep machines running different accounts (e.g. home and work) and/or different operating systems (e.g. Linux, macOS, and Windows) in sync, while still being able to easily cope with differences from machine to machine. terminal https://github.com/twpayne/chezmoi arm64 amd64 armhf","title":"chezmoi"},{"location":"packages/chezmoi/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install chezmoi sudo apt install chezmoi","title":"Installation"},{"location":"packages/chezmoi/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ chezmoi = 2 .17.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | chezmoi=2.17.1*","title":"Snippets"},{"location":"packages/chezmoi/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/chezmoi.svg )](https://docs.wakemeops.com/packages/chezmoi) < a href = \"https://docs.wakemeops.com/packages/chezmoi\" > < img src = \"https://docs.wakemeops.com/badges/chezmoi.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/chezmoi.svg :target: https://docs.wakemeops.com/packages/chezmoi","title":"Badge"},{"location":"packages/choose/","text":"choose Human-friendly and fast alternative to cut and sometimes awk Not a complete replacement for cut and awk, but rather a simple and intuitive tool to use when the basics of awk or cut are sufficient, but it is not necessary to run them. terminal https://github.com/theryangeary/choose amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install choose sudo apt install choose Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ choose = 1 .3.4* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | choose=1.3.4* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/choose.svg )](https://docs.wakemeops.com/packages/choose) < a href = \"https://docs.wakemeops.com/packages/choose\" > < img src = \"https://docs.wakemeops.com/badges/choose.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/choose.svg :target: https://docs.wakemeops.com/packages/choose","title":"choose"},{"location":"packages/choose/#choose","text":"Human-friendly and fast alternative to cut and sometimes awk Not a complete replacement for cut and awk, but rather a simple and intuitive tool to use when the basics of awk or cut are sufficient, but it is not necessary to run them. terminal https://github.com/theryangeary/choose amd64","title":"choose"},{"location":"packages/choose/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install choose sudo apt install choose","title":"Installation"},{"location":"packages/choose/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ choose = 1 .3.4* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | choose=1.3.4*","title":"Snippets"},{"location":"packages/choose/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/choose.svg )](https://docs.wakemeops.com/packages/choose) < a href = \"https://docs.wakemeops.com/packages/choose\" > < img src = \"https://docs.wakemeops.com/badges/choose.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/choose.svg :target: https://docs.wakemeops.com/packages/choose","title":"Badge"},{"location":"packages/clog-cli/","text":"clog-cli Generate beautiful changelogs from your Git commit history clog creates a changelog automatically from your local git metadata. The way this works, is every time you make a commit, you ensure your commit subject line follows the conventional format. Then when you wish to update your changelog, you simply run clog inside your local repository with any options you'd like to specify. dev https://github.com/clog-tool/clog-cli arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install clog-cli sudo apt install clog-cli Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ clog-cli = 0 .9.3* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | clog-cli=0.9.3* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/clog-cli.svg )](https://docs.wakemeops.com/packages/clog-cli) < a href = \"https://docs.wakemeops.com/packages/clog-cli\" > < img src = \"https://docs.wakemeops.com/badges/clog-cli.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/clog-cli.svg :target: https://docs.wakemeops.com/packages/clog-cli","title":"clog-cli"},{"location":"packages/clog-cli/#clog-cli","text":"Generate beautiful changelogs from your Git commit history clog creates a changelog automatically from your local git metadata. The way this works, is every time you make a commit, you ensure your commit subject line follows the conventional format. Then when you wish to update your changelog, you simply run clog inside your local repository with any options you'd like to specify. dev https://github.com/clog-tool/clog-cli arm64 amd64 armhf","title":"clog-cli"},{"location":"packages/clog-cli/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install clog-cli sudo apt install clog-cli","title":"Installation"},{"location":"packages/clog-cli/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ clog-cli = 0 .9.3* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | clog-cli=0.9.3*","title":"Snippets"},{"location":"packages/clog-cli/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/clog-cli.svg )](https://docs.wakemeops.com/packages/clog-cli) < a href = \"https://docs.wakemeops.com/packages/clog-cli\" > < img src = \"https://docs.wakemeops.com/badges/clog-cli.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/clog-cli.svg :target: https://docs.wakemeops.com/packages/clog-cli","title":"Badge"},{"location":"packages/container-diff/","text":"container-diff Diff your Docker containers Tool for analyzing and comparing container images. Container-diff can examine images along several different criteria, including: history, file system, size, packages... devops https://github.com/GoogleContainerTools/container-diff amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install container-diff sudo apt install container-diff Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ container-diff = 0 .17.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | container-diff=0.17.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/container-diff.svg )](https://docs.wakemeops.com/packages/container-diff) < a href = \"https://docs.wakemeops.com/packages/container-diff\" > < img src = \"https://docs.wakemeops.com/badges/container-diff.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/container-diff.svg :target: https://docs.wakemeops.com/packages/container-diff","title":"container-diff"},{"location":"packages/container-diff/#container-diff","text":"Diff your Docker containers Tool for analyzing and comparing container images. Container-diff can examine images along several different criteria, including: history, file system, size, packages... devops https://github.com/GoogleContainerTools/container-diff amd64","title":"container-diff"},{"location":"packages/container-diff/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install container-diff sudo apt install container-diff","title":"Installation"},{"location":"packages/container-diff/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ container-diff = 0 .17.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | container-diff=0.17.0*","title":"Snippets"},{"location":"packages/container-diff/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/container-diff.svg )](https://docs.wakemeops.com/packages/container-diff) < a href = \"https://docs.wakemeops.com/packages/container-diff\" > < img src = \"https://docs.wakemeops.com/badges/container-diff.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/container-diff.svg :target: https://docs.wakemeops.com/packages/container-diff","title":"Badge"},{"location":"packages/container-structure-test/","text":"container-structure-test Validate the structure of your container images The Container Structure Tests provide a powerful framework to validate the structure of a container image. These tests can be used to check the output of commands in an image, as well as verify metadata and contents of the filesystem. devops https://github.com/GoogleContainerTools/container-structure-test arm64 amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install container-structure-test sudo apt install container-structure-test Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ container-structure-test = 1 .11.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | container-structure-test=1.11.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/container-structure-test.svg )](https://docs.wakemeops.com/packages/container-structure-test) < a href = \"https://docs.wakemeops.com/packages/container-structure-test\" > < img src = \"https://docs.wakemeops.com/badges/container-structure-test.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/container-structure-test.svg :target: https://docs.wakemeops.com/packages/container-structure-test","title":"container-structure-test"},{"location":"packages/container-structure-test/#container-structure-test","text":"Validate the structure of your container images The Container Structure Tests provide a powerful framework to validate the structure of a container image. These tests can be used to check the output of commands in an image, as well as verify metadata and contents of the filesystem. devops https://github.com/GoogleContainerTools/container-structure-test arm64 amd64","title":"container-structure-test"},{"location":"packages/container-structure-test/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install container-structure-test sudo apt install container-structure-test","title":"Installation"},{"location":"packages/container-structure-test/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ container-structure-test = 1 .11.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | container-structure-test=1.11.0*","title":"Snippets"},{"location":"packages/container-structure-test/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/container-structure-test.svg )](https://docs.wakemeops.com/packages/container-structure-test) < a href = \"https://docs.wakemeops.com/packages/container-structure-test\" > < img src = \"https://docs.wakemeops.com/badges/container-structure-test.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/container-structure-test.svg :target: https://docs.wakemeops.com/packages/container-structure-test","title":"Badge"},{"location":"packages/coursier/","text":"coursier Scala application and artifact manager Coursier can install Scala applications and setup your Scala development environment. It can also download and cache artifacts from the web. Once installed, the main usage of coursier is through its command-line tool cs. Its features include: Install additional Scala applications. Launch Scala applications. Create standalone launchers for Scala applications. dev https://get-coursier.io/ amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install coursier sudo apt install coursier Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ coursier = 2 .1.0-M6* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | coursier=2.1.0-M6* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/coursier.svg )](https://docs.wakemeops.com/packages/coursier) < a href = \"https://docs.wakemeops.com/packages/coursier\" > < img src = \"https://docs.wakemeops.com/badges/coursier.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/coursier.svg :target: https://docs.wakemeops.com/packages/coursier","title":"coursier"},{"location":"packages/coursier/#coursier","text":"Scala application and artifact manager Coursier can install Scala applications and setup your Scala development environment. It can also download and cache artifacts from the web. Once installed, the main usage of coursier is through its command-line tool cs. Its features include: Install additional Scala applications. Launch Scala applications. Create standalone launchers for Scala applications. dev https://get-coursier.io/ amd64","title":"coursier"},{"location":"packages/coursier/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install coursier sudo apt install coursier","title":"Installation"},{"location":"packages/coursier/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ coursier = 2 .1.0-M6* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | coursier=2.1.0-M6*","title":"Snippets"},{"location":"packages/coursier/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/coursier.svg )](https://docs.wakemeops.com/packages/coursier) < a href = \"https://docs.wakemeops.com/packages/coursier\" > < img src = \"https://docs.wakemeops.com/badges/coursier.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/coursier.svg :target: https://docs.wakemeops.com/packages/coursier","title":"Badge"},{"location":"packages/curlie/","text":"curlie The power of 'curl', the ease of use of 'httpie' If you like the interface of HTTPie but miss the features of curl, curlie is what you are searching for. It is a frontend to curl that adds the ease of use of httpie, without compromising on features and performance. All curl options are exposed with syntax sugar and output formatting inspired from httpie. terminal https://github.com/rs/curlie arm64 amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install curlie sudo apt install curlie Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ curlie = 1 .6.9* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | curlie=1.6.9* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/curlie.svg )](https://docs.wakemeops.com/packages/curlie) < a href = \"https://docs.wakemeops.com/packages/curlie\" > < img src = \"https://docs.wakemeops.com/badges/curlie.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/curlie.svg :target: https://docs.wakemeops.com/packages/curlie","title":"curlie"},{"location":"packages/curlie/#curlie","text":"The power of 'curl', the ease of use of 'httpie' If you like the interface of HTTPie but miss the features of curl, curlie is what you are searching for. It is a frontend to curl that adds the ease of use of httpie, without compromising on features and performance. All curl options are exposed with syntax sugar and output formatting inspired from httpie. terminal https://github.com/rs/curlie arm64 amd64","title":"curlie"},{"location":"packages/curlie/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install curlie sudo apt install curlie","title":"Installation"},{"location":"packages/curlie/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ curlie = 1 .6.9* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | curlie=1.6.9*","title":"Snippets"},{"location":"packages/curlie/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/curlie.svg )](https://docs.wakemeops.com/packages/curlie) < a href = \"https://docs.wakemeops.com/packages/curlie\" > < img src = \"https://docs.wakemeops.com/badges/curlie.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/curlie.svg :target: https://docs.wakemeops.com/packages/curlie","title":"Badge"},{"location":"packages/datanymizer/","text":"datanymizer Powerful postgres database anonymizer with flexible rules Datanymizer generates database-native dump. You can import or process your dump with supported database without 3rd-party importers. Datanymizer is created & supported by Evrone. dev https://github.com/datanymizer/datanymizer amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install datanymizer sudo apt install datanymizer Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ datanymizer = 0 .5.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | datanymizer=0.5.1* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/datanymizer.svg )](https://docs.wakemeops.com/packages/datanymizer) < a href = \"https://docs.wakemeops.com/packages/datanymizer\" > < img src = \"https://docs.wakemeops.com/badges/datanymizer.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/datanymizer.svg :target: https://docs.wakemeops.com/packages/datanymizer","title":"datanymizer"},{"location":"packages/datanymizer/#datanymizer","text":"Powerful postgres database anonymizer with flexible rules Datanymizer generates database-native dump. You can import or process your dump with supported database without 3rd-party importers. Datanymizer is created & supported by Evrone. dev https://github.com/datanymizer/datanymizer amd64","title":"datanymizer"},{"location":"packages/datanymizer/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install datanymizer sudo apt install datanymizer","title":"Installation"},{"location":"packages/datanymizer/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ datanymizer = 0 .5.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | datanymizer=0.5.1*","title":"Snippets"},{"location":"packages/datanymizer/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/datanymizer.svg )](https://docs.wakemeops.com/packages/datanymizer) < a href = \"https://docs.wakemeops.com/packages/datanymizer\" > < img src = \"https://docs.wakemeops.com/badges/datanymizer.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/datanymizer.svg :target: https://docs.wakemeops.com/packages/datanymizer","title":"Badge"},{"location":"packages/datree/","text":"datree Prevent Kubernetes misconfigurations from reaching production Datree is a CLI tool that supports Kubernetes admins in their roles by preventing developers from making errors in Kubernetes configurations that can cause clusters to fail in production. Our CLI tool is open source, enabling it to be supported by the Kubernetes community. devops https://github.com/datreeio/datree arm64 amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install datree sudo apt install datree Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ datree = 1 .4.37* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | datree=1.4.37* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/datree.svg )](https://docs.wakemeops.com/packages/datree) < a href = \"https://docs.wakemeops.com/packages/datree\" > < img src = \"https://docs.wakemeops.com/badges/datree.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/datree.svg :target: https://docs.wakemeops.com/packages/datree","title":"datree"},{"location":"packages/datree/#datree","text":"Prevent Kubernetes misconfigurations from reaching production Datree is a CLI tool that supports Kubernetes admins in their roles by preventing developers from making errors in Kubernetes configurations that can cause clusters to fail in production. Our CLI tool is open source, enabling it to be supported by the Kubernetes community. devops https://github.com/datreeio/datree arm64 amd64","title":"datree"},{"location":"packages/datree/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install datree sudo apt install datree","title":"Installation"},{"location":"packages/datree/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ datree = 1 .4.37* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | datree=1.4.37*","title":"Snippets"},{"location":"packages/datree/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/datree.svg )](https://docs.wakemeops.com/packages/datree) < a href = \"https://docs.wakemeops.com/packages/datree\" > < img src = \"https://docs.wakemeops.com/badges/datree.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/datree.svg :target: https://docs.wakemeops.com/packages/datree","title":"Badge"},{"location":"packages/devspace/","text":"devspace Developer tool for Kubernetes Automate your deployment workflow with DevSpace and develop software directly inside Kubernetes. devops https://devspace.sh arm64 amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install devspace sudo apt install devspace Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ devspace = 5 .18.5* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | devspace=5.18.5* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/devspace.svg )](https://docs.wakemeops.com/packages/devspace) < a href = \"https://docs.wakemeops.com/packages/devspace\" > < img src = \"https://docs.wakemeops.com/badges/devspace.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/devspace.svg :target: https://docs.wakemeops.com/packages/devspace","title":"devspace"},{"location":"packages/devspace/#devspace","text":"Developer tool for Kubernetes Automate your deployment workflow with DevSpace and develop software directly inside Kubernetes. devops https://devspace.sh arm64 amd64","title":"devspace"},{"location":"packages/devspace/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install devspace sudo apt install devspace","title":"Installation"},{"location":"packages/devspace/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ devspace = 5 .18.5* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | devspace=5.18.5*","title":"Snippets"},{"location":"packages/devspace/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/devspace.svg )](https://docs.wakemeops.com/packages/devspace) < a href = \"https://docs.wakemeops.com/packages/devspace\" > < img src = \"https://docs.wakemeops.com/badges/devspace.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/devspace.svg :target: https://docs.wakemeops.com/packages/devspace","title":"Badge"},{"location":"packages/diskonaut/","text":"diskonaut Terminal disk space navigator Given a path on your hard-drive (which could also be the root path, eg. /) diskonaut scans it and indexes its metadata to memory so that you could explore its contents (even while still scanning!). Once completed, you can navigate through subfolders, getting a visual treemap representation of what's taking up your disk space. You can even delete files or folders and diskonaut will track how much space you've freed up in this session. terminal https://github.com/imsnif/diskonaut amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install diskonaut sudo apt install diskonaut Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ diskonaut = 0 .11.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | diskonaut=0.11.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/diskonaut.svg )](https://docs.wakemeops.com/packages/diskonaut) < a href = \"https://docs.wakemeops.com/packages/diskonaut\" > < img src = \"https://docs.wakemeops.com/badges/diskonaut.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/diskonaut.svg :target: https://docs.wakemeops.com/packages/diskonaut","title":"diskonaut"},{"location":"packages/diskonaut/#diskonaut","text":"Terminal disk space navigator Given a path on your hard-drive (which could also be the root path, eg. /) diskonaut scans it and indexes its metadata to memory so that you could explore its contents (even while still scanning!). Once completed, you can navigate through subfolders, getting a visual treemap representation of what's taking up your disk space. You can even delete files or folders and diskonaut will track how much space you've freed up in this session. terminal https://github.com/imsnif/diskonaut amd64","title":"diskonaut"},{"location":"packages/diskonaut/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install diskonaut sudo apt install diskonaut","title":"Installation"},{"location":"packages/diskonaut/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ diskonaut = 0 .11.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | diskonaut=0.11.0*","title":"Snippets"},{"location":"packages/diskonaut/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/diskonaut.svg )](https://docs.wakemeops.com/packages/diskonaut) < a href = \"https://docs.wakemeops.com/packages/diskonaut\" > < img src = \"https://docs.wakemeops.com/badges/diskonaut.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/diskonaut.svg :target: https://docs.wakemeops.com/packages/diskonaut","title":"Badge"},{"location":"packages/docker-compose/","text":"docker-compose Lightweight development environments using Docker docker-compose is a service management software built on top of docker. Define your services and their relationships in a simple YAML file, and let compose handle the rest. devops https://docs.docker.com/compose arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install docker-compose sudo apt install docker-compose Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ docker-compose = 2 .6.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | docker-compose=2.6.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/docker-compose.svg )](https://docs.wakemeops.com/packages/docker-compose) < a href = \"https://docs.wakemeops.com/packages/docker-compose\" > < img src = \"https://docs.wakemeops.com/badges/docker-compose.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/docker-compose.svg :target: https://docs.wakemeops.com/packages/docker-compose","title":"docker-compose"},{"location":"packages/docker-compose/#docker-compose","text":"Lightweight development environments using Docker docker-compose is a service management software built on top of docker. Define your services and their relationships in a simple YAML file, and let compose handle the rest. devops https://docs.docker.com/compose arm64 amd64 armhf","title":"docker-compose"},{"location":"packages/docker-compose/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install docker-compose sudo apt install docker-compose","title":"Installation"},{"location":"packages/docker-compose/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ docker-compose = 2 .6.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | docker-compose=2.6.0*","title":"Snippets"},{"location":"packages/docker-compose/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/docker-compose.svg )](https://docs.wakemeops.com/packages/docker-compose) < a href = \"https://docs.wakemeops.com/packages/docker-compose\" > < img src = \"https://docs.wakemeops.com/badges/docker-compose.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/docker-compose.svg :target: https://docs.wakemeops.com/packages/docker-compose","title":"Badge"},{"location":"packages/docker-slim/","text":"docker-slim Minify docker images by up to 30x Provides a set of commands (build, xray, lint and others) to simplify and optimize your developer experience with containers. It makes your containers betters, smaller and more secure. devops https://dockersl.im arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install docker-slim sudo apt install docker-slim Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ docker-slim = 1 .37.6* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | docker-slim=1.37.6* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/docker-slim.svg )](https://docs.wakemeops.com/packages/docker-slim) < a href = \"https://docs.wakemeops.com/packages/docker-slim\" > < img src = \"https://docs.wakemeops.com/badges/docker-slim.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/docker-slim.svg :target: https://docs.wakemeops.com/packages/docker-slim","title":"docker-slim"},{"location":"packages/docker-slim/#docker-slim","text":"Minify docker images by up to 30x Provides a set of commands (build, xray, lint and others) to simplify and optimize your developer experience with containers. It makes your containers betters, smaller and more secure. devops https://dockersl.im arm64 amd64 armhf","title":"docker-slim"},{"location":"packages/docker-slim/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install docker-slim sudo apt install docker-slim","title":"Installation"},{"location":"packages/docker-slim/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ docker-slim = 1 .37.6* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | docker-slim=1.37.6*","title":"Snippets"},{"location":"packages/docker-slim/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/docker-slim.svg )](https://docs.wakemeops.com/packages/docker-slim) < a href = \"https://docs.wakemeops.com/packages/docker-slim\" > < img src = \"https://docs.wakemeops.com/badges/docker-slim.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/docker-slim.svg :target: https://docs.wakemeops.com/packages/docker-slim","title":"Badge"},{"location":"packages/dog/","text":"dog Command-line DNS client A user-friendly command-line DNS client. dig on steroids terminal https://github.com/ogham/dog amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install dog sudo apt install dog Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ dog = 0 .1.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | dog=0.1.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/dog.svg )](https://docs.wakemeops.com/packages/dog) < a href = \"https://docs.wakemeops.com/packages/dog\" > < img src = \"https://docs.wakemeops.com/badges/dog.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/dog.svg :target: https://docs.wakemeops.com/packages/dog","title":"dog"},{"location":"packages/dog/#dog","text":"Command-line DNS client A user-friendly command-line DNS client. dig on steroids terminal https://github.com/ogham/dog amd64","title":"dog"},{"location":"packages/dog/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install dog sudo apt install dog","title":"Installation"},{"location":"packages/dog/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ dog = 0 .1.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | dog=0.1.0*","title":"Snippets"},{"location":"packages/dog/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/dog.svg )](https://docs.wakemeops.com/packages/dog) < a href = \"https://docs.wakemeops.com/packages/dog\" > < img src = \"https://docs.wakemeops.com/badges/dog.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/dog.svg :target: https://docs.wakemeops.com/packages/dog","title":"Badge"},{"location":"packages/dust/","text":"dust Human-friendly and fast alternative to 'du' du + rust = dust. Like du but more intuitive. terminal https://github.com/bootandy/dust amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install dust sudo apt install dust Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ dust = 0 .8.1-alpha.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | dust=0.8.1-alpha.2* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/dust.svg )](https://docs.wakemeops.com/packages/dust) < a href = \"https://docs.wakemeops.com/packages/dust\" > < img src = \"https://docs.wakemeops.com/badges/dust.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/dust.svg :target: https://docs.wakemeops.com/packages/dust","title":"dust"},{"location":"packages/dust/#dust","text":"Human-friendly and fast alternative to 'du' du + rust = dust. Like du but more intuitive. terminal https://github.com/bootandy/dust amd64 armhf","title":"dust"},{"location":"packages/dust/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install dust sudo apt install dust","title":"Installation"},{"location":"packages/dust/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ dust = 0 .8.1-alpha.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | dust=0.8.1-alpha.2*","title":"Snippets"},{"location":"packages/dust/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/dust.svg )](https://docs.wakemeops.com/packages/dust) < a href = \"https://docs.wakemeops.com/packages/dust\" > < img src = \"https://docs.wakemeops.com/badges/dust.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/dust.svg :target: https://docs.wakemeops.com/packages/dust","title":"Badge"},{"location":"packages/exa/","text":"exa Modern replacement for ls exa is a modern replacement for ls. terminal https://github.com/ogham/exa amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install exa sudo apt install exa Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ exa = 0 .10.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | exa=0.10.1* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/exa.svg )](https://docs.wakemeops.com/packages/exa) < a href = \"https://docs.wakemeops.com/packages/exa\" > < img src = \"https://docs.wakemeops.com/badges/exa.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/exa.svg :target: https://docs.wakemeops.com/packages/exa","title":"exa"},{"location":"packages/exa/#exa","text":"Modern replacement for ls exa is a modern replacement for ls. terminal https://github.com/ogham/exa amd64 armhf","title":"exa"},{"location":"packages/exa/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install exa sudo apt install exa","title":"Installation"},{"location":"packages/exa/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ exa = 0 .10.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | exa=0.10.1*","title":"Snippets"},{"location":"packages/exa/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/exa.svg )](https://docs.wakemeops.com/packages/exa) < a href = \"https://docs.wakemeops.com/packages/exa\" > < img src = \"https://docs.wakemeops.com/badges/exa.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/exa.svg :target: https://docs.wakemeops.com/packages/exa","title":"Badge"},{"location":"packages/fd/","text":"fd Human-friendly and fast alternative to 'find' fd is a program to find entries in your filesystem. It is a simple, fast and user-friendly alternative to find. While it does not aim to support all of find's powerful functionality, it provides sensible (opinionated) defaults for a majority of use cases. terminal https://github.com/sharkdp/fd arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install fd sudo apt install fd Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ fd = 8 .4.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | fd=8.4.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/fd.svg )](https://docs.wakemeops.com/packages/fd) < a href = \"https://docs.wakemeops.com/packages/fd\" > < img src = \"https://docs.wakemeops.com/badges/fd.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/fd.svg :target: https://docs.wakemeops.com/packages/fd","title":"fd"},{"location":"packages/fd/#fd","text":"Human-friendly and fast alternative to 'find' fd is a program to find entries in your filesystem. It is a simple, fast and user-friendly alternative to find. While it does not aim to support all of find's powerful functionality, it provides sensible (opinionated) defaults for a majority of use cases. terminal https://github.com/sharkdp/fd arm64 amd64 armhf","title":"fd"},{"location":"packages/fd/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install fd sudo apt install fd","title":"Installation"},{"location":"packages/fd/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ fd = 8 .4.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | fd=8.4.0*","title":"Snippets"},{"location":"packages/fd/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/fd.svg )](https://docs.wakemeops.com/packages/fd) < a href = \"https://docs.wakemeops.com/packages/fd\" > < img src = \"https://docs.wakemeops.com/badges/fd.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/fd.svg :target: https://docs.wakemeops.com/packages/fd","title":"Badge"},{"location":"packages/feroxbuster/","text":"feroxbuster Fast, simple, recursive content discovery tool Tool designed to perform Forced Browsing. Forced browsing is an attack where the aim is to enumerate and access resources that are not referenced by the web application, but are still accessible by an attacker. feroxbuster uses brute force combined with a wordlist to search for unlinked content in target directories. These resources may store sensitive information about web applications and operational systems, such as source code, credentials, internal network addressing, etc... This attack is also known as Predictable Resource Location, File Enumeration, Directory Enumeration, and Resource Enumeration. secops https://github.com/epi052/feroxbuster arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install feroxbuster sudo apt install feroxbuster Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ feroxbuster = 2 .6.4* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | feroxbuster=2.6.4* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/feroxbuster.svg )](https://docs.wakemeops.com/packages/feroxbuster) < a href = \"https://docs.wakemeops.com/packages/feroxbuster\" > < img src = \"https://docs.wakemeops.com/badges/feroxbuster.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/feroxbuster.svg :target: https://docs.wakemeops.com/packages/feroxbuster","title":"feroxbuster"},{"location":"packages/feroxbuster/#feroxbuster","text":"Fast, simple, recursive content discovery tool Tool designed to perform Forced Browsing. Forced browsing is an attack where the aim is to enumerate and access resources that are not referenced by the web application, but are still accessible by an attacker. feroxbuster uses brute force combined with a wordlist to search for unlinked content in target directories. These resources may store sensitive information about web applications and operational systems, such as source code, credentials, internal network addressing, etc... This attack is also known as Predictable Resource Location, File Enumeration, Directory Enumeration, and Resource Enumeration. secops https://github.com/epi052/feroxbuster arm64 amd64 armhf","title":"feroxbuster"},{"location":"packages/feroxbuster/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install feroxbuster sudo apt install feroxbuster","title":"Installation"},{"location":"packages/feroxbuster/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ feroxbuster = 2 .6.4* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | feroxbuster=2.6.4*","title":"Snippets"},{"location":"packages/feroxbuster/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/feroxbuster.svg )](https://docs.wakemeops.com/packages/feroxbuster) < a href = \"https://docs.wakemeops.com/packages/feroxbuster\" > < img src = \"https://docs.wakemeops.com/badges/feroxbuster.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/feroxbuster.svg :target: https://docs.wakemeops.com/packages/feroxbuster","title":"Badge"},{"location":"packages/flux/","text":"flux Open and extensible continuous delivery solution for Kubernetes Flux is a tool for keeping Kubernetes clusters in sync with sources of configuration (like Git repositories), and automating updates to configuration when there is new code to deploy. devops https://fluxcd.io arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install flux sudo apt install flux Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ flux = 0 .30.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | flux=0.30.2* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/flux.svg )](https://docs.wakemeops.com/packages/flux) < a href = \"https://docs.wakemeops.com/packages/flux\" > < img src = \"https://docs.wakemeops.com/badges/flux.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/flux.svg :target: https://docs.wakemeops.com/packages/flux","title":"flux"},{"location":"packages/flux/#flux","text":"Open and extensible continuous delivery solution for Kubernetes Flux is a tool for keeping Kubernetes clusters in sync with sources of configuration (like Git repositories), and automating updates to configuration when there is new code to deploy. devops https://fluxcd.io arm64 amd64 armhf","title":"flux"},{"location":"packages/flux/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install flux sudo apt install flux","title":"Installation"},{"location":"packages/flux/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ flux = 0 .30.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | flux=0.30.2*","title":"Snippets"},{"location":"packages/flux/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/flux.svg )](https://docs.wakemeops.com/packages/flux) < a href = \"https://docs.wakemeops.com/packages/flux\" > < img src = \"https://docs.wakemeops.com/badges/flux.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/flux.svg :target: https://docs.wakemeops.com/packages/flux","title":"Badge"},{"location":"packages/ghorg/","text":"ghorg Quickly clone an entire org/users repositories into one directory Ghorg can be useful in many situations such as: searching an orgs/users codebase (with ack, silver searcher, grep), bash scripting, creating backups, onboarding new team members (cloning all team repos), performing audits... It supports GitHub, GitLab, Bitbucket, and more. terminal https://github.com/gabrie30/ghorg arm64 amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install ghorg sudo apt install ghorg Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ ghorg = 1 .7.16* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | ghorg=1.7.16* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/ghorg.svg )](https://docs.wakemeops.com/packages/ghorg) < a href = \"https://docs.wakemeops.com/packages/ghorg\" > < img src = \"https://docs.wakemeops.com/badges/ghorg.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/ghorg.svg :target: https://docs.wakemeops.com/packages/ghorg","title":"ghorg"},{"location":"packages/ghorg/#ghorg","text":"Quickly clone an entire org/users repositories into one directory Ghorg can be useful in many situations such as: searching an orgs/users codebase (with ack, silver searcher, grep), bash scripting, creating backups, onboarding new team members (cloning all team repos), performing audits... It supports GitHub, GitLab, Bitbucket, and more. terminal https://github.com/gabrie30/ghorg arm64 amd64","title":"ghorg"},{"location":"packages/ghorg/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install ghorg sudo apt install ghorg","title":"Installation"},{"location":"packages/ghorg/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ ghorg = 1 .7.16* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | ghorg=1.7.16*","title":"Snippets"},{"location":"packages/ghorg/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/ghorg.svg )](https://docs.wakemeops.com/packages/ghorg) < a href = \"https://docs.wakemeops.com/packages/ghorg\" > < img src = \"https://docs.wakemeops.com/badges/ghorg.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/ghorg.svg :target: https://docs.wakemeops.com/packages/ghorg","title":"Badge"},{"location":"packages/git-delta/","text":"git-delta Syntax-highlighting pager for git, diff, and grep output Code evolves, and we all spend time studying diffs. Delta aims to make this both efficient and enjoyable: it allows you to make extensive changes to the layout and styling of diffs, as well as allowing you to stay arbitrarily close to the default git/diff output. terminal https://dandavison.github.io/delta/ arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install git-delta sudo apt install git-delta Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ git-delta = 0 .13.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | git-delta=0.13.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/git-delta.svg )](https://docs.wakemeops.com/packages/git-delta) < a href = \"https://docs.wakemeops.com/packages/git-delta\" > < img src = \"https://docs.wakemeops.com/badges/git-delta.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/git-delta.svg :target: https://docs.wakemeops.com/packages/git-delta","title":"git-delta"},{"location":"packages/git-delta/#git-delta","text":"Syntax-highlighting pager for git, diff, and grep output Code evolves, and we all spend time studying diffs. Delta aims to make this both efficient and enjoyable: it allows you to make extensive changes to the layout and styling of diffs, as well as allowing you to stay arbitrarily close to the default git/diff output. terminal https://dandavison.github.io/delta/ arm64 amd64 armhf","title":"git-delta"},{"location":"packages/git-delta/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install git-delta sudo apt install git-delta","title":"Installation"},{"location":"packages/git-delta/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ git-delta = 0 .13.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | git-delta=0.13.0*","title":"Snippets"},{"location":"packages/git-delta/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/git-delta.svg )](https://docs.wakemeops.com/packages/git-delta) < a href = \"https://docs.wakemeops.com/packages/git-delta\" > < img src = \"https://docs.wakemeops.com/badges/git-delta.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/git-delta.svg :target: https://docs.wakemeops.com/packages/git-delta","title":"Badge"},{"location":"packages/github-cli/","text":"github-cli GitHub on the command line Brings pull requests, issues, and other GitHub concepts to the terminal next to where you are already working with git and your code. dev https://github.com/cli/cli arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install github-cli sudo apt install github-cli Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ github-cli = 2 .11.3* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | github-cli=2.11.3* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/github-cli.svg )](https://docs.wakemeops.com/packages/github-cli) < a href = \"https://docs.wakemeops.com/packages/github-cli\" > < img src = \"https://docs.wakemeops.com/badges/github-cli.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/github-cli.svg :target: https://docs.wakemeops.com/packages/github-cli","title":"github-cli"},{"location":"packages/github-cli/#github-cli","text":"GitHub on the command line Brings pull requests, issues, and other GitHub concepts to the terminal next to where you are already working with git and your code. dev https://github.com/cli/cli arm64 amd64 armhf","title":"github-cli"},{"location":"packages/github-cli/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install github-cli sudo apt install github-cli","title":"Installation"},{"location":"packages/github-cli/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ github-cli = 2 .11.3* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | github-cli=2.11.3*","title":"Snippets"},{"location":"packages/github-cli/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/github-cli.svg )](https://docs.wakemeops.com/packages/github-cli) < a href = \"https://docs.wakemeops.com/packages/github-cli\" > < img src = \"https://docs.wakemeops.com/badges/github-cli.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/github-cli.svg :target: https://docs.wakemeops.com/packages/github-cli","title":"Badge"},{"location":"packages/github-hub/","text":"github-hub Do everyday GitHub tasks without ever leaving the terminal hub is a command line tool that wraps git in order to extend it with extra features and commands that make working with GitHub easier. dev https://hub.github.com arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install github-hub sudo apt install github-hub Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ github-hub = 2 .14.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | github-hub=2.14.2* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/github-hub.svg )](https://docs.wakemeops.com/packages/github-hub) < a href = \"https://docs.wakemeops.com/packages/github-hub\" > < img src = \"https://docs.wakemeops.com/badges/github-hub.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/github-hub.svg :target: https://docs.wakemeops.com/packages/github-hub","title":"github-hub"},{"location":"packages/github-hub/#github-hub","text":"Do everyday GitHub tasks without ever leaving the terminal hub is a command line tool that wraps git in order to extend it with extra features and commands that make working with GitHub easier. dev https://hub.github.com arm64 amd64 armhf","title":"github-hub"},{"location":"packages/github-hub/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install github-hub sudo apt install github-hub","title":"Installation"},{"location":"packages/github-hub/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ github-hub = 2 .14.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | github-hub=2.14.2*","title":"Snippets"},{"location":"packages/github-hub/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/github-hub.svg )](https://docs.wakemeops.com/packages/github-hub) < a href = \"https://docs.wakemeops.com/packages/github-hub\" > < img src = \"https://docs.wakemeops.com/badges/github-hub.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/github-hub.svg :target: https://docs.wakemeops.com/packages/github-hub","title":"Badge"},{"location":"packages/gitlab-release-cli/","text":"gitlab-release-cli Command-line interface for GitLab Release Consumes instructions in the :release node of the .gitlab-ci.yml to create a Release object in GitLab Rails. GitLab Release is a CLI application written in Golang. devops https://gitlab.com/gitlab-org/release-cli/ arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install gitlab-release-cli sudo apt install gitlab-release-cli Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ gitlab-release-cli = 0 .11.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | gitlab-release-cli=0.11.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/gitlab-release-cli.svg )](https://docs.wakemeops.com/packages/gitlab-release-cli) < a href = \"https://docs.wakemeops.com/packages/gitlab-release-cli\" > < img src = \"https://docs.wakemeops.com/badges/gitlab-release-cli.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/gitlab-release-cli.svg :target: https://docs.wakemeops.com/packages/gitlab-release-cli","title":"gitlab-release-cli"},{"location":"packages/gitlab-release-cli/#gitlab-release-cli","text":"Command-line interface for GitLab Release Consumes instructions in the :release node of the .gitlab-ci.yml to create a Release object in GitLab Rails. GitLab Release is a CLI application written in Golang. devops https://gitlab.com/gitlab-org/release-cli/ arm64 amd64 armhf","title":"gitlab-release-cli"},{"location":"packages/gitlab-release-cli/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install gitlab-release-cli sudo apt install gitlab-release-cli","title":"Installation"},{"location":"packages/gitlab-release-cli/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ gitlab-release-cli = 0 .11.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | gitlab-release-cli=0.11.0*","title":"Snippets"},{"location":"packages/gitlab-release-cli/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/gitlab-release-cli.svg )](https://docs.wakemeops.com/packages/gitlab-release-cli) < a href = \"https://docs.wakemeops.com/packages/gitlab-release-cli\" > < img src = \"https://docs.wakemeops.com/badges/gitlab-release-cli.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/gitlab-release-cli.svg :target: https://docs.wakemeops.com/packages/gitlab-release-cli","title":"Badge"},{"location":"packages/glab/","text":"glab Gitlab on the command line Bring GitLab to your terminal right next to where you're already working with git and your code without switching between browser windows or tabs. Work with issues, merge requests, look at running pipelines directly from your CLI, among other features. dev https://glab.readthedocs.io/ arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install glab sudo apt install glab Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ glab = 1 .22.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | glab=1.22.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/glab.svg )](https://docs.wakemeops.com/packages/glab) < a href = \"https://docs.wakemeops.com/packages/glab\" > < img src = \"https://docs.wakemeops.com/badges/glab.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/glab.svg :target: https://docs.wakemeops.com/packages/glab","title":"glab"},{"location":"packages/glab/#glab","text":"Gitlab on the command line Bring GitLab to your terminal right next to where you're already working with git and your code without switching between browser windows or tabs. Work with issues, merge requests, look at running pipelines directly from your CLI, among other features. dev https://glab.readthedocs.io/ arm64 amd64 armhf","title":"glab"},{"location":"packages/glab/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install glab sudo apt install glab","title":"Installation"},{"location":"packages/glab/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ glab = 1 .22.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | glab=1.22.0*","title":"Snippets"},{"location":"packages/glab/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/glab.svg )](https://docs.wakemeops.com/packages/glab) < a href = \"https://docs.wakemeops.com/packages/glab\" > < img src = \"https://docs.wakemeops.com/badges/glab.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/glab.svg :target: https://docs.wakemeops.com/packages/glab","title":"Badge"},{"location":"packages/gping/","text":"gping Ping, but with a graph tool to visualize ping speed over time. terminal https://github.com/orf/gping arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install gping sudo apt install gping Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ gping = 1 .3.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | gping=1.3.1* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/gping.svg )](https://docs.wakemeops.com/packages/gping) < a href = \"https://docs.wakemeops.com/packages/gping\" > < img src = \"https://docs.wakemeops.com/badges/gping.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/gping.svg :target: https://docs.wakemeops.com/packages/gping","title":"gping"},{"location":"packages/gping/#gping","text":"Ping, but with a graph tool to visualize ping speed over time. terminal https://github.com/orf/gping arm64 amd64 armhf","title":"gping"},{"location":"packages/gping/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install gping sudo apt install gping","title":"Installation"},{"location":"packages/gping/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ gping = 1 .3.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | gping=1.3.1*","title":"Snippets"},{"location":"packages/gping/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/gping.svg )](https://docs.wakemeops.com/packages/gping) < a href = \"https://docs.wakemeops.com/packages/gping\" > < img src = \"https://docs.wakemeops.com/badges/gping.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/gping.svg :target: https://docs.wakemeops.com/packages/gping","title":"Badge"},{"location":"packages/grex/","text":"grex Command-line tool and library for generating regular expressions grex is a library as well as a command-line utility that is meant to simplify the often complicated and tedious task of creating regular expressions. It does so by automatically generating a single regular expression from user-provided test cases. The resulting expression is guaranteed to match the test cases which it was generated from. terminal https://github.com/pemistahl/grex amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install grex sudo apt install grex Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ grex = 1 .3.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | grex=1.3.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/grex.svg )](https://docs.wakemeops.com/packages/grex) < a href = \"https://docs.wakemeops.com/packages/grex\" > < img src = \"https://docs.wakemeops.com/badges/grex.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/grex.svg :target: https://docs.wakemeops.com/packages/grex","title":"grex"},{"location":"packages/grex/#grex","text":"Command-line tool and library for generating regular expressions grex is a library as well as a command-line utility that is meant to simplify the often complicated and tedious task of creating regular expressions. It does so by automatically generating a single regular expression from user-provided test cases. The resulting expression is guaranteed to match the test cases which it was generated from. terminal https://github.com/pemistahl/grex amd64","title":"grex"},{"location":"packages/grex/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install grex sudo apt install grex","title":"Installation"},{"location":"packages/grex/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ grex = 1 .3.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | grex=1.3.0*","title":"Snippets"},{"location":"packages/grex/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/grex.svg )](https://docs.wakemeops.com/packages/grex) < a href = \"https://docs.wakemeops.com/packages/grex\" > < img src = \"https://docs.wakemeops.com/badges/grex.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/grex.svg :target: https://docs.wakemeops.com/packages/grex","title":"Badge"},{"location":"packages/helm/","text":"helm Kubernetes package manager Tool for managing Kubernetes charts. Charts are packages of pre-configured Kubernetes resources. devops https://helm.sh arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install helm sudo apt install helm Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ helm = 3 .9.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | helm=3.9.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/helm.svg )](https://docs.wakemeops.com/packages/helm) < a href = \"https://docs.wakemeops.com/packages/helm\" > < img src = \"https://docs.wakemeops.com/badges/helm.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/helm.svg :target: https://docs.wakemeops.com/packages/helm","title":"helm"},{"location":"packages/helm/#helm","text":"Kubernetes package manager Tool for managing Kubernetes charts. Charts are packages of pre-configured Kubernetes resources. devops https://helm.sh arm64 amd64 armhf","title":"helm"},{"location":"packages/helm/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install helm sudo apt install helm","title":"Installation"},{"location":"packages/helm/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ helm = 3 .9.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | helm=3.9.0*","title":"Snippets"},{"location":"packages/helm/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/helm.svg )](https://docs.wakemeops.com/packages/helm) < a href = \"https://docs.wakemeops.com/packages/helm\" > < img src = \"https://docs.wakemeops.com/badges/helm.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/helm.svg :target: https://docs.wakemeops.com/packages/helm","title":"Badge"},{"location":"packages/helmfile/","text":"helmfile Deploy Kubernetes Helm Charts Helmfile is a declarative spec for deploying helm charts. It lets you... Keep a directory of chart value files and maintain changes in version control. Apply CI/CD to configuration changes. Periodically sync to avoid skew in environments. devops https://github.com/roboll/helmfile arm64 amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install helmfile sudo apt install helmfile Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ helmfile = 0 .144.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | helmfile=0.144.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/helmfile.svg )](https://docs.wakemeops.com/packages/helmfile) < a href = \"https://docs.wakemeops.com/packages/helmfile\" > < img src = \"https://docs.wakemeops.com/badges/helmfile.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/helmfile.svg :target: https://docs.wakemeops.com/packages/helmfile","title":"helmfile"},{"location":"packages/helmfile/#helmfile","text":"Deploy Kubernetes Helm Charts Helmfile is a declarative spec for deploying helm charts. It lets you... Keep a directory of chart value files and maintain changes in version control. Apply CI/CD to configuration changes. Periodically sync to avoid skew in environments. devops https://github.com/roboll/helmfile arm64 amd64","title":"helmfile"},{"location":"packages/helmfile/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install helmfile sudo apt install helmfile","title":"Installation"},{"location":"packages/helmfile/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ helmfile = 0 .144.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | helmfile=0.144.0*","title":"Snippets"},{"location":"packages/helmfile/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/helmfile.svg )](https://docs.wakemeops.com/packages/helmfile) < a href = \"https://docs.wakemeops.com/packages/helmfile\" > < img src = \"https://docs.wakemeops.com/badges/helmfile.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/helmfile.svg :target: https://docs.wakemeops.com/packages/helmfile","title":"Badge"},{"location":"packages/himalaya/","text":"himalaya Command-line interface for email management CLI email client. The project is under active development. Do not use in production before the v1.0.0. terminal https://github.com/soywod/himalaya amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install himalaya sudo apt install himalaya Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ himalaya = 0 .5.10* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | himalaya=0.5.10* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/himalaya.svg )](https://docs.wakemeops.com/packages/himalaya) < a href = \"https://docs.wakemeops.com/packages/himalaya\" > < img src = \"https://docs.wakemeops.com/badges/himalaya.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/himalaya.svg :target: https://docs.wakemeops.com/packages/himalaya","title":"himalaya"},{"location":"packages/himalaya/#himalaya","text":"Command-line interface for email management CLI email client. The project is under active development. Do not use in production before the v1.0.0. terminal https://github.com/soywod/himalaya amd64","title":"himalaya"},{"location":"packages/himalaya/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install himalaya sudo apt install himalaya","title":"Installation"},{"location":"packages/himalaya/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ himalaya = 0 .5.10* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | himalaya=0.5.10*","title":"Snippets"},{"location":"packages/himalaya/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/himalaya.svg )](https://docs.wakemeops.com/packages/himalaya) < a href = \"https://docs.wakemeops.com/packages/himalaya\" > < img src = \"https://docs.wakemeops.com/badges/himalaya.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/himalaya.svg :target: https://docs.wakemeops.com/packages/himalaya","title":"Badge"},{"location":"packages/hostctl/","text":"hostctl Manage /etc/hosts from cli This tool gives you more control over the use of your hosts file. You can have multiple profiles and switch them on/off as you need. terminal http://guumaster.github.io/hostctl arm64 amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install hostctl sudo apt install hostctl Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ hostctl = 1 .1.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | hostctl=1.1.2* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/hostctl.svg )](https://docs.wakemeops.com/packages/hostctl) < a href = \"https://docs.wakemeops.com/packages/hostctl\" > < img src = \"https://docs.wakemeops.com/badges/hostctl.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/hostctl.svg :target: https://docs.wakemeops.com/packages/hostctl","title":"hostctl"},{"location":"packages/hostctl/#hostctl","text":"Manage /etc/hosts from cli This tool gives you more control over the use of your hosts file. You can have multiple profiles and switch them on/off as you need. terminal http://guumaster.github.io/hostctl arm64 amd64","title":"hostctl"},{"location":"packages/hostctl/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install hostctl sudo apt install hostctl","title":"Installation"},{"location":"packages/hostctl/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ hostctl = 1 .1.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | hostctl=1.1.2*","title":"Snippets"},{"location":"packages/hostctl/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/hostctl.svg )](https://docs.wakemeops.com/packages/hostctl) < a href = \"https://docs.wakemeops.com/packages/hostctl\" > < img src = \"https://docs.wakemeops.com/badges/hostctl.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/hostctl.svg :target: https://docs.wakemeops.com/packages/hostctl","title":"Badge"},{"location":"packages/hugo/","text":"hugo Fast and flexible Static Site Generator Hugo is a static site generator written in Go. It is optimized for speed, ease of use, and configurability. Hugo takes a directory with content and templates, and renders them into a full HTML website. Hugo relies on Markdown files with front matter for meta data. And you can run Hugo from any directory. This works well for shared hosts and other systems where you don\u2019t have a privileged account. Hugo renders a typical website of moderate size in a fraction of a second. A good rule of thumb is that each piece of content renders in around 1 millisecond. Hugo is meant to work well for any kind of website including blogs, tumblelogs and docs. dev https://gohugo.io/ arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install hugo sudo apt install hugo Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ hugo = 0 .100.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | hugo=0.100.1* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/hugo.svg )](https://docs.wakemeops.com/packages/hugo) < a href = \"https://docs.wakemeops.com/packages/hugo\" > < img src = \"https://docs.wakemeops.com/badges/hugo.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/hugo.svg :target: https://docs.wakemeops.com/packages/hugo","title":"hugo"},{"location":"packages/hugo/#hugo","text":"Fast and flexible Static Site Generator Hugo is a static site generator written in Go. It is optimized for speed, ease of use, and configurability. Hugo takes a directory with content and templates, and renders them into a full HTML website. Hugo relies on Markdown files with front matter for meta data. And you can run Hugo from any directory. This works well for shared hosts and other systems where you don\u2019t have a privileged account. Hugo renders a typical website of moderate size in a fraction of a second. A good rule of thumb is that each piece of content renders in around 1 millisecond. Hugo is meant to work well for any kind of website including blogs, tumblelogs and docs. dev https://gohugo.io/ arm64 amd64 armhf","title":"hugo"},{"location":"packages/hugo/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install hugo sudo apt install hugo","title":"Installation"},{"location":"packages/hugo/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ hugo = 0 .100.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | hugo=0.100.1*","title":"Snippets"},{"location":"packages/hugo/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/hugo.svg )](https://docs.wakemeops.com/packages/hugo) < a href = \"https://docs.wakemeops.com/packages/hugo\" > < img src = \"https://docs.wakemeops.com/badges/hugo.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/hugo.svg :target: https://docs.wakemeops.com/packages/hugo","title":"Badge"},{"location":"packages/iamlive/","text":"iamlive Generate policies from AWS calls Use client-side monitoring (CSM) or embedded proxy to generate AWS IAM policy. devops https://github.com/iann0036/iamlive arm64 amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install iamlive sudo apt install iamlive Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ iamlive = 0 .47.3* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | iamlive=0.47.3* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/iamlive.svg )](https://docs.wakemeops.com/packages/iamlive) < a href = \"https://docs.wakemeops.com/packages/iamlive\" > < img src = \"https://docs.wakemeops.com/badges/iamlive.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/iamlive.svg :target: https://docs.wakemeops.com/packages/iamlive","title":"iamlive"},{"location":"packages/iamlive/#iamlive","text":"Generate policies from AWS calls Use client-side monitoring (CSM) or embedded proxy to generate AWS IAM policy. devops https://github.com/iann0036/iamlive arm64 amd64","title":"iamlive"},{"location":"packages/iamlive/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install iamlive sudo apt install iamlive","title":"Installation"},{"location":"packages/iamlive/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ iamlive = 0 .47.3* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | iamlive=0.47.3*","title":"Snippets"},{"location":"packages/iamlive/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/iamlive.svg )](https://docs.wakemeops.com/packages/iamlive) < a href = \"https://docs.wakemeops.com/packages/iamlive\" > < img src = \"https://docs.wakemeops.com/badges/iamlive.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/iamlive.svg :target: https://docs.wakemeops.com/packages/iamlive","title":"Badge"},{"location":"packages/istioctl/","text":"istioctl Command-line interface for Istio Istio is an open platform to connect, manage, and secure microservices. devops https://istio.io arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install istioctl sudo apt install istioctl Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ istioctl = 1 .14.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | istioctl=1.14.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/istioctl.svg )](https://docs.wakemeops.com/packages/istioctl) < a href = \"https://docs.wakemeops.com/packages/istioctl\" > < img src = \"https://docs.wakemeops.com/badges/istioctl.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/istioctl.svg :target: https://docs.wakemeops.com/packages/istioctl","title":"istioctl"},{"location":"packages/istioctl/#istioctl","text":"Command-line interface for Istio Istio is an open platform to connect, manage, and secure microservices. devops https://istio.io arm64 amd64 armhf","title":"istioctl"},{"location":"packages/istioctl/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install istioctl sudo apt install istioctl","title":"Installation"},{"location":"packages/istioctl/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ istioctl = 1 .14.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | istioctl=1.14.0*","title":"Snippets"},{"location":"packages/istioctl/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/istioctl.svg )](https://docs.wakemeops.com/packages/istioctl) < a href = \"https://docs.wakemeops.com/packages/istioctl\" > < img src = \"https://docs.wakemeops.com/badges/istioctl.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/istioctl.svg :target: https://docs.wakemeops.com/packages/istioctl","title":"Badge"},{"location":"packages/k3d/","text":"k3d Run Rancher Lab's k3s in Docker k3d is a lightweight wrapper to run k3s (Rancher Lab\u2019s minimal Kubernetes distribution) in docker. k3d makes it very easy to create single- and multi- node k3s clusters in docker, e.g. for local development on Kubernetes. devops https://k3d.io arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install k3d sudo apt install k3d Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ k3d = 5 .4.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | k3d=5.4.2* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/k3d.svg )](https://docs.wakemeops.com/packages/k3d) < a href = \"https://docs.wakemeops.com/packages/k3d\" > < img src = \"https://docs.wakemeops.com/badges/k3d.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/k3d.svg :target: https://docs.wakemeops.com/packages/k3d","title":"k3d"},{"location":"packages/k3d/#k3d","text":"Run Rancher Lab's k3s in Docker k3d is a lightweight wrapper to run k3s (Rancher Lab\u2019s minimal Kubernetes distribution) in docker. k3d makes it very easy to create single- and multi- node k3s clusters in docker, e.g. for local development on Kubernetes. devops https://k3d.io arm64 amd64 armhf","title":"k3d"},{"location":"packages/k3d/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install k3d sudo apt install k3d","title":"Installation"},{"location":"packages/k3d/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ k3d = 5 .4.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | k3d=5.4.2*","title":"Snippets"},{"location":"packages/k3d/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/k3d.svg )](https://docs.wakemeops.com/packages/k3d) < a href = \"https://docs.wakemeops.com/packages/k3d\" > < img src = \"https://docs.wakemeops.com/badges/k3d.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/k3d.svg :target: https://docs.wakemeops.com/packages/k3d","title":"Badge"},{"location":"packages/k9s/","text":"k9s Manage your Kubernetes clusters with style K9s provides a terminal UI to interact with your Kubernetes clusters. The aim of this project is to make it easier to navigate, observe and manage your applications in the wild. devops https://k9scli.io arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install k9s sudo apt install k9s Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ k9s = 0 .25.18* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | k9s=0.25.18* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/k9s.svg )](https://docs.wakemeops.com/packages/k9s) < a href = \"https://docs.wakemeops.com/packages/k9s\" > < img src = \"https://docs.wakemeops.com/badges/k9s.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/k9s.svg :target: https://docs.wakemeops.com/packages/k9s","title":"k9s"},{"location":"packages/k9s/#k9s","text":"Manage your Kubernetes clusters with style K9s provides a terminal UI to interact with your Kubernetes clusters. The aim of this project is to make it easier to navigate, observe and manage your applications in the wild. devops https://k9scli.io arm64 amd64 armhf","title":"k9s"},{"location":"packages/k9s/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install k9s sudo apt install k9s","title":"Installation"},{"location":"packages/k9s/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ k9s = 0 .25.18* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | k9s=0.25.18*","title":"Snippets"},{"location":"packages/k9s/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/k9s.svg )](https://docs.wakemeops.com/packages/k9s) < a href = \"https://docs.wakemeops.com/packages/k9s\" > < img src = \"https://docs.wakemeops.com/badges/k9s.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/k9s.svg :target: https://docs.wakemeops.com/packages/k9s","title":"Badge"},{"location":"packages/kind/","text":"kind Deploy Kubernetes cluster in Docker kind is a tool for running local Kubernetes clusters using Docker container \"nodes\". kind was primarily designed for testing Kubernetes itself, but may be used for local development or CI. devops https://kind.sigs.k8s.io arm64 amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install kind sudo apt install kind Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ kind = 0 .14.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | kind=0.14.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/kind.svg )](https://docs.wakemeops.com/packages/kind) < a href = \"https://docs.wakemeops.com/packages/kind\" > < img src = \"https://docs.wakemeops.com/badges/kind.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/kind.svg :target: https://docs.wakemeops.com/packages/kind","title":"kind"},{"location":"packages/kind/#kind","text":"Deploy Kubernetes cluster in Docker kind is a tool for running local Kubernetes clusters using Docker container \"nodes\". kind was primarily designed for testing Kubernetes itself, but may be used for local development or CI. devops https://kind.sigs.k8s.io arm64 amd64","title":"kind"},{"location":"packages/kind/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install kind sudo apt install kind","title":"Installation"},{"location":"packages/kind/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ kind = 0 .14.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | kind=0.14.0*","title":"Snippets"},{"location":"packages/kind/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/kind.svg )](https://docs.wakemeops.com/packages/kind) < a href = \"https://docs.wakemeops.com/packages/kind\" > < img src = \"https://docs.wakemeops.com/badges/kind.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/kind.svg :target: https://docs.wakemeops.com/packages/kind","title":"Badge"},{"location":"packages/kompose/","text":"kompose Convert docker-compose.yaml into k8s deployments and services kompose is a tool to help users who are familiar with docker-compose move to Kubernetes. kompose takes a Docker Compose file and translates it into Kubernetes resources. devops https://kompose.io arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install kompose sudo apt install kompose Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ kompose = 1 .26.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | kompose=1.26.1* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/kompose.svg )](https://docs.wakemeops.com/packages/kompose) < a href = \"https://docs.wakemeops.com/packages/kompose\" > < img src = \"https://docs.wakemeops.com/badges/kompose.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/kompose.svg :target: https://docs.wakemeops.com/packages/kompose","title":"kompose"},{"location":"packages/kompose/#kompose","text":"Convert docker-compose.yaml into k8s deployments and services kompose is a tool to help users who are familiar with docker-compose move to Kubernetes. kompose takes a Docker Compose file and translates it into Kubernetes resources. devops https://kompose.io arm64 amd64 armhf","title":"kompose"},{"location":"packages/kompose/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install kompose sudo apt install kompose","title":"Installation"},{"location":"packages/kompose/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ kompose = 1 .26.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | kompose=1.26.1*","title":"Snippets"},{"location":"packages/kompose/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/kompose.svg )](https://docs.wakemeops.com/packages/kompose) < a href = \"https://docs.wakemeops.com/packages/kompose\" > < img src = \"https://docs.wakemeops.com/badges/kompose.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/kompose.svg :target: https://docs.wakemeops.com/packages/kompose","title":"Badge"},{"location":"packages/krew/","text":"krew Find and install kubectl plugins Krew is the package manager for kubectl plugins. devops https://krew.sigs.k8s.io arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install krew sudo apt install krew Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ krew = 0 .4.3* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | krew=0.4.3* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/krew.svg )](https://docs.wakemeops.com/packages/krew) < a href = \"https://docs.wakemeops.com/packages/krew\" > < img src = \"https://docs.wakemeops.com/badges/krew.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/krew.svg :target: https://docs.wakemeops.com/packages/krew","title":"krew"},{"location":"packages/krew/#krew","text":"Find and install kubectl plugins Krew is the package manager for kubectl plugins. devops https://krew.sigs.k8s.io arm64 amd64 armhf","title":"krew"},{"location":"packages/krew/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install krew sudo apt install krew","title":"Installation"},{"location":"packages/krew/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ krew = 0 .4.3* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | krew=0.4.3*","title":"Snippets"},{"location":"packages/krew/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/krew.svg )](https://docs.wakemeops.com/packages/krew) < a href = \"https://docs.wakemeops.com/packages/krew\" > < img src = \"https://docs.wakemeops.com/badges/krew.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/krew.svg :target: https://docs.wakemeops.com/packages/krew","title":"Badge"},{"location":"packages/kube-score/","text":"kube-score Kubernetes object analysis for improved reliability and security kube-score is a tool that performs static code analysis of your Kubernetes object definitions. devops https://github.com/zegl/kube-score arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install kube-score sudo apt install kube-score Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ kube-score = 1 .14.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | kube-score=1.14.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/kube-score.svg )](https://docs.wakemeops.com/packages/kube-score) < a href = \"https://docs.wakemeops.com/packages/kube-score\" > < img src = \"https://docs.wakemeops.com/badges/kube-score.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/kube-score.svg :target: https://docs.wakemeops.com/packages/kube-score","title":"kube-score"},{"location":"packages/kube-score/#kube-score","text":"Kubernetes object analysis for improved reliability and security kube-score is a tool that performs static code analysis of your Kubernetes object definitions. devops https://github.com/zegl/kube-score arm64 amd64 armhf","title":"kube-score"},{"location":"packages/kube-score/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install kube-score sudo apt install kube-score","title":"Installation"},{"location":"packages/kube-score/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ kube-score = 1 .14.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | kube-score=1.14.0*","title":"Snippets"},{"location":"packages/kube-score/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/kube-score.svg )](https://docs.wakemeops.com/packages/kube-score) < a href = \"https://docs.wakemeops.com/packages/kube-score\" > < img src = \"https://docs.wakemeops.com/badges/kube-score.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/kube-score.svg :target: https://docs.wakemeops.com/packages/kube-score","title":"Badge"},{"location":"packages/kubectl/","text":"kubectl Command line client for controlling a Kubernetes cluster kubectl is a command line client for running commands against Kubernetes clusters. devops https://github.com/kubernetes/kubectl arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install kubectl sudo apt install kubectl Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ kubectl = 1 .24.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | kubectl=1.24.1* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/kubectl.svg )](https://docs.wakemeops.com/packages/kubectl) < a href = \"https://docs.wakemeops.com/packages/kubectl\" > < img src = \"https://docs.wakemeops.com/badges/kubectl.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/kubectl.svg :target: https://docs.wakemeops.com/packages/kubectl","title":"kubectl"},{"location":"packages/kubectl/#kubectl","text":"Command line client for controlling a Kubernetes cluster kubectl is a command line client for running commands against Kubernetes clusters. devops https://github.com/kubernetes/kubectl arm64 amd64 armhf","title":"kubectl"},{"location":"packages/kubectl/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install kubectl sudo apt install kubectl","title":"Installation"},{"location":"packages/kubectl/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ kubectl = 1 .24.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | kubectl=1.24.1*","title":"Snippets"},{"location":"packages/kubectl/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/kubectl.svg )](https://docs.wakemeops.com/packages/kubectl) < a href = \"https://docs.wakemeops.com/packages/kubectl\" > < img src = \"https://docs.wakemeops.com/badges/kubectl.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/kubectl.svg :target: https://docs.wakemeops.com/packages/kubectl","title":"Badge"},{"location":"packages/kubectl-kudo/","text":"kubectl-kudo Kubernetes universal declarative operator Kubernetes Universal Declarative Operator (KUDO) provides a declarative approach to building production-grade Kubernetes Operators covering the entire application lifecycle. devops https://kudo.dev/ arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install kubectl-kudo sudo apt install kubectl-kudo Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ kubectl-kudo = 0 .19.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | kubectl-kudo=0.19.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/kubectl-kudo.svg )](https://docs.wakemeops.com/packages/kubectl-kudo) < a href = \"https://docs.wakemeops.com/packages/kubectl-kudo\" > < img src = \"https://docs.wakemeops.com/badges/kubectl-kudo.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/kubectl-kudo.svg :target: https://docs.wakemeops.com/packages/kubectl-kudo","title":"kubectl-kudo"},{"location":"packages/kubectl-kudo/#kubectl-kudo","text":"Kubernetes universal declarative operator Kubernetes Universal Declarative Operator (KUDO) provides a declarative approach to building production-grade Kubernetes Operators covering the entire application lifecycle. devops https://kudo.dev/ arm64 amd64 armhf","title":"kubectl-kudo"},{"location":"packages/kubectl-kudo/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install kubectl-kudo sudo apt install kubectl-kudo","title":"Installation"},{"location":"packages/kubectl-kudo/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ kubectl-kudo = 0 .19.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | kubectl-kudo=0.19.0*","title":"Snippets"},{"location":"packages/kubectl-kudo/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/kubectl-kudo.svg )](https://docs.wakemeops.com/packages/kubectl-kudo) < a href = \"https://docs.wakemeops.com/packages/kubectl-kudo\" > < img src = \"https://docs.wakemeops.com/badges/kubectl-kudo.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/kubectl-kudo.svg :target: https://docs.wakemeops.com/packages/kubectl-kudo","title":"Badge"},{"location":"packages/kubectl-neat/","text":"kubectl-neat Clean up Kubernetes yaml and json output to make it readable Remove clutter from Kubernetes manifests to make them more readable. devops https://github.com/itaysk/kubectl-neat arm64 amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install kubectl-neat sudo apt install kubectl-neat Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ kubectl-neat = 2 .0.3* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | kubectl-neat=2.0.3* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/kubectl-neat.svg )](https://docs.wakemeops.com/packages/kubectl-neat) < a href = \"https://docs.wakemeops.com/packages/kubectl-neat\" > < img src = \"https://docs.wakemeops.com/badges/kubectl-neat.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/kubectl-neat.svg :target: https://docs.wakemeops.com/packages/kubectl-neat","title":"kubectl-neat"},{"location":"packages/kubectl-neat/#kubectl-neat","text":"Clean up Kubernetes yaml and json output to make it readable Remove clutter from Kubernetes manifests to make them more readable. devops https://github.com/itaysk/kubectl-neat arm64 amd64","title":"kubectl-neat"},{"location":"packages/kubectl-neat/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install kubectl-neat sudo apt install kubectl-neat","title":"Installation"},{"location":"packages/kubectl-neat/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ kubectl-neat = 2 .0.3* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | kubectl-neat=2.0.3*","title":"Snippets"},{"location":"packages/kubectl-neat/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/kubectl-neat.svg )](https://docs.wakemeops.com/packages/kubectl-neat) < a href = \"https://docs.wakemeops.com/packages/kubectl-neat\" > < img src = \"https://docs.wakemeops.com/badges/kubectl-neat.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/kubectl-neat.svg :target: https://docs.wakemeops.com/packages/kubectl-neat","title":"Badge"},{"location":"packages/kubectx/","text":"kubectx Kubectl plugin that helps you switch between clusters Faster way to switch between clusters in kubectl. devops https://github.com/ahmetb/kubectx arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install kubectx sudo apt install kubectx Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ kubectx = 0 .9.4* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | kubectx=0.9.4* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/kubectx.svg )](https://docs.wakemeops.com/packages/kubectx) < a href = \"https://docs.wakemeops.com/packages/kubectx\" > < img src = \"https://docs.wakemeops.com/badges/kubectx.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/kubectx.svg :target: https://docs.wakemeops.com/packages/kubectx","title":"kubectx"},{"location":"packages/kubectx/#kubectx","text":"Kubectl plugin that helps you switch between clusters Faster way to switch between clusters in kubectl. devops https://github.com/ahmetb/kubectx arm64 amd64 armhf","title":"kubectx"},{"location":"packages/kubectx/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install kubectx sudo apt install kubectx","title":"Installation"},{"location":"packages/kubectx/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ kubectx = 0 .9.4* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | kubectx=0.9.4*","title":"Snippets"},{"location":"packages/kubectx/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/kubectx.svg )](https://docs.wakemeops.com/packages/kubectx) < a href = \"https://docs.wakemeops.com/packages/kubectx\" > < img src = \"https://docs.wakemeops.com/badges/kubectx.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/kubectx.svg :target: https://docs.wakemeops.com/packages/kubectx","title":"Badge"},{"location":"packages/kubens/","text":"kubens Kubectl plugin that helps you switch between namespaces Faster way to switch between namespaces in kubectl. devops https://github.com/ahmetb/kubectx arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install kubens sudo apt install kubens Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ kubens = 0 .9.4* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | kubens=0.9.4* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/kubens.svg )](https://docs.wakemeops.com/packages/kubens) < a href = \"https://docs.wakemeops.com/packages/kubens\" > < img src = \"https://docs.wakemeops.com/badges/kubens.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/kubens.svg :target: https://docs.wakemeops.com/packages/kubens","title":"kubens"},{"location":"packages/kubens/#kubens","text":"Kubectl plugin that helps you switch between namespaces Faster way to switch between namespaces in kubectl. devops https://github.com/ahmetb/kubectx arm64 amd64 armhf","title":"kubens"},{"location":"packages/kubens/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install kubens sudo apt install kubens","title":"Installation"},{"location":"packages/kubens/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ kubens = 0 .9.4* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | kubens=0.9.4*","title":"Snippets"},{"location":"packages/kubens/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/kubens.svg )](https://docs.wakemeops.com/packages/kubens) < a href = \"https://docs.wakemeops.com/packages/kubens\" > < img src = \"https://docs.wakemeops.com/badges/kubens.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/kubens.svg :target: https://docs.wakemeops.com/packages/kubens","title":"Badge"},{"location":"packages/kubeseal/","text":"kubeseal Secret management solution for Kubernetes Encrypt your Secret into a SealedSecret, which is safe to store - even to a public repository. devops https://github.com/bitnami-labs/sealed-secrets arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install kubeseal sudo apt install kubeseal Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ kubeseal = 0 .18.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | kubeseal=0.18.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/kubeseal.svg )](https://docs.wakemeops.com/packages/kubeseal) < a href = \"https://docs.wakemeops.com/packages/kubeseal\" > < img src = \"https://docs.wakemeops.com/badges/kubeseal.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/kubeseal.svg :target: https://docs.wakemeops.com/packages/kubeseal","title":"kubeseal"},{"location":"packages/kubeseal/#kubeseal","text":"Secret management solution for Kubernetes Encrypt your Secret into a SealedSecret, which is safe to store - even to a public repository. devops https://github.com/bitnami-labs/sealed-secrets arm64 amd64 armhf","title":"kubeseal"},{"location":"packages/kubeseal/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install kubeseal sudo apt install kubeseal","title":"Installation"},{"location":"packages/kubeseal/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ kubeseal = 0 .18.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | kubeseal=0.18.0*","title":"Snippets"},{"location":"packages/kubeseal/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/kubeseal.svg )](https://docs.wakemeops.com/packages/kubeseal) < a href = \"https://docs.wakemeops.com/packages/kubeseal\" > < img src = \"https://docs.wakemeops.com/badges/kubeseal.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/kubeseal.svg :target: https://docs.wakemeops.com/packages/kubeseal","title":"Badge"},{"location":"packages/kustomize/","text":"kustomize Kubernetes native configuration management kustomize lets you customize raw, template-free YAML files for multiple purposes, leaving the original YAML untouched and usable as is. kustomize targets Kubernetes; it understands and can patch Kubernetes style API objects. It's like make, in that what it does is declared in a file, and it's like sed, in that it emits edited text. devops https://kustomize.io arm64 amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install kustomize sudo apt install kustomize Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ kustomize = 4 .5.5* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | kustomize=4.5.5* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/kustomize.svg )](https://docs.wakemeops.com/packages/kustomize) < a href = \"https://docs.wakemeops.com/packages/kustomize\" > < img src = \"https://docs.wakemeops.com/badges/kustomize.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/kustomize.svg :target: https://docs.wakemeops.com/packages/kustomize","title":"kustomize"},{"location":"packages/kustomize/#kustomize","text":"Kubernetes native configuration management kustomize lets you customize raw, template-free YAML files for multiple purposes, leaving the original YAML untouched and usable as is. kustomize targets Kubernetes; it understands and can patch Kubernetes style API objects. It's like make, in that what it does is declared in a file, and it's like sed, in that it emits edited text. devops https://kustomize.io arm64 amd64","title":"kustomize"},{"location":"packages/kustomize/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install kustomize sudo apt install kustomize","title":"Installation"},{"location":"packages/kustomize/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ kustomize = 4 .5.5* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | kustomize=4.5.5*","title":"Snippets"},{"location":"packages/kustomize/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/kustomize.svg )](https://docs.wakemeops.com/packages/kustomize) < a href = \"https://docs.wakemeops.com/packages/kustomize\" > < img src = \"https://docs.wakemeops.com/badges/kustomize.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/kustomize.svg :target: https://docs.wakemeops.com/packages/kustomize","title":"Badge"},{"location":"packages/lazydocker/","text":"lazydocker A lazier way to manage everything docker A simple terminal UI for both docker and docker-compose, written in Go with the gocui library. devops https://github.com/jesseduffield/lazydocker arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install lazydocker sudo apt install lazydocker Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ lazydocker = 0 .18.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | lazydocker=0.18.1* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/lazydocker.svg )](https://docs.wakemeops.com/packages/lazydocker) < a href = \"https://docs.wakemeops.com/packages/lazydocker\" > < img src = \"https://docs.wakemeops.com/badges/lazydocker.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/lazydocker.svg :target: https://docs.wakemeops.com/packages/lazydocker","title":"lazydocker"},{"location":"packages/lazydocker/#lazydocker","text":"A lazier way to manage everything docker A simple terminal UI for both docker and docker-compose, written in Go with the gocui library. devops https://github.com/jesseduffield/lazydocker arm64 amd64 armhf","title":"lazydocker"},{"location":"packages/lazydocker/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install lazydocker sudo apt install lazydocker","title":"Installation"},{"location":"packages/lazydocker/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ lazydocker = 0 .18.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | lazydocker=0.18.1*","title":"Snippets"},{"location":"packages/lazydocker/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/lazydocker.svg )](https://docs.wakemeops.com/packages/lazydocker) < a href = \"https://docs.wakemeops.com/packages/lazydocker\" > < img src = \"https://docs.wakemeops.com/badges/lazydocker.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/lazydocker.svg :target: https://docs.wakemeops.com/packages/lazydocker","title":"Badge"},{"location":"packages/lens/","text":"lens Powerful IDE for kubernetes Lens provides the full situational awareness for everything that runs in Kubernetes. It\u2019s lowering the barrier of entry for people just getting started and radically improving productivity for people with more experience. Lens is built on open source and backed by a number of Kubernetes and cloud native ecosystem pioneers. With over 350,000 users and 16,000 stars on GitHub, it\u2019s the largest and most advanced Kubernetes platform in the world. desktop https://k8slens.dev/ amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install lens sudo apt install lens Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/lens.svg )](https://docs.wakemeops.com/packages/lens) < a href = \"https://docs.wakemeops.com/packages/lens\" > < img src = \"https://docs.wakemeops.com/badges/lens.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/lens.svg :target: https://docs.wakemeops.com/packages/lens","title":"lens"},{"location":"packages/lens/#lens","text":"Powerful IDE for kubernetes Lens provides the full situational awareness for everything that runs in Kubernetes. It\u2019s lowering the barrier of entry for people just getting started and radically improving productivity for people with more experience. Lens is built on open source and backed by a number of Kubernetes and cloud native ecosystem pioneers. With over 350,000 users and 16,000 stars on GitHub, it\u2019s the largest and most advanced Kubernetes platform in the world. desktop https://k8slens.dev/ amd64","title":"lens"},{"location":"packages/lens/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install lens sudo apt install lens","title":"Installation"},{"location":"packages/lens/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/lens.svg )](https://docs.wakemeops.com/packages/lens) < a href = \"https://docs.wakemeops.com/packages/lens\" > < img src = \"https://docs.wakemeops.com/badges/lens.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/lens.svg :target: https://docs.wakemeops.com/packages/lens","title":"Badge"},{"location":"packages/linkerd/","text":"linkerd Ultralight service mesh for Kubernetes Linkerd is an ultralight, security-first service mesh for Kubernetes. Linkerd adds critical security, observability, and reliability features to your Kubernetes stack with no code change required. devops https://linkerd.io arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install linkerd sudo apt install linkerd Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ linkerd = 21 .12.4* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | linkerd=21.12.4* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/linkerd.svg )](https://docs.wakemeops.com/packages/linkerd) < a href = \"https://docs.wakemeops.com/packages/linkerd\" > < img src = \"https://docs.wakemeops.com/badges/linkerd.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/linkerd.svg :target: https://docs.wakemeops.com/packages/linkerd","title":"linkerd"},{"location":"packages/linkerd/#linkerd","text":"Ultralight service mesh for Kubernetes Linkerd is an ultralight, security-first service mesh for Kubernetes. Linkerd adds critical security, observability, and reliability features to your Kubernetes stack with no code change required. devops https://linkerd.io arm64 amd64 armhf","title":"linkerd"},{"location":"packages/linkerd/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install linkerd sudo apt install linkerd","title":"Installation"},{"location":"packages/linkerd/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ linkerd = 21 .12.4* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | linkerd=21.12.4*","title":"Snippets"},{"location":"packages/linkerd/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/linkerd.svg )](https://docs.wakemeops.com/packages/linkerd) < a href = \"https://docs.wakemeops.com/packages/linkerd\" > < img src = \"https://docs.wakemeops.com/badges/linkerd.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/linkerd.svg :target: https://docs.wakemeops.com/packages/linkerd","title":"Badge"},{"location":"packages/logcli/","text":"logcli Command-line interface for loki It facilitates running LogQL queries against a Loki instance. devops https://github.com/grafana/loki arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install logcli sudo apt install logcli Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ logcli = 2 .5.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | logcli=2.5.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/logcli.svg )](https://docs.wakemeops.com/packages/logcli) < a href = \"https://docs.wakemeops.com/packages/logcli\" > < img src = \"https://docs.wakemeops.com/badges/logcli.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/logcli.svg :target: https://docs.wakemeops.com/packages/logcli","title":"logcli"},{"location":"packages/logcli/#logcli","text":"Command-line interface for loki It facilitates running LogQL queries against a Loki instance. devops https://github.com/grafana/loki arm64 amd64 armhf","title":"logcli"},{"location":"packages/logcli/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install logcli sudo apt install logcli","title":"Installation"},{"location":"packages/logcli/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ logcli = 2 .5.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | logcli=2.5.0*","title":"Snippets"},{"location":"packages/logcli/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/logcli.svg )](https://docs.wakemeops.com/packages/logcli) < a href = \"https://docs.wakemeops.com/packages/logcli\" > < img src = \"https://docs.wakemeops.com/badges/logcli.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/logcli.svg :target: https://docs.wakemeops.com/packages/logcli","title":"Badge"},{"location":"packages/mask/","text":"mask Command-line task runner defined by a simple markdown file mask is a CLI task runner which is defined by a simple markdown file. It searches for a maskfile.md in the current directory which it then parses for commands and arguments. dev https://github.com/jakedeichert/mask amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install mask sudo apt install mask Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ mask = 0 .11.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | mask=0.11.2* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/mask.svg )](https://docs.wakemeops.com/packages/mask) < a href = \"https://docs.wakemeops.com/packages/mask\" > < img src = \"https://docs.wakemeops.com/badges/mask.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/mask.svg :target: https://docs.wakemeops.com/packages/mask","title":"mask"},{"location":"packages/mask/#mask","text":"Command-line task runner defined by a simple markdown file mask is a CLI task runner which is defined by a simple markdown file. It searches for a maskfile.md in the current directory which it then parses for commands and arguments. dev https://github.com/jakedeichert/mask amd64","title":"mask"},{"location":"packages/mask/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install mask sudo apt install mask","title":"Installation"},{"location":"packages/mask/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ mask = 0 .11.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | mask=0.11.2*","title":"Snippets"},{"location":"packages/mask/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/mask.svg )](https://docs.wakemeops.com/packages/mask) < a href = \"https://docs.wakemeops.com/packages/mask\" > < img src = \"https://docs.wakemeops.com/badges/mask.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/mask.svg :target: https://docs.wakemeops.com/packages/mask","title":"Badge"},{"location":"packages/mattermost-desktop/","text":"mattermost-desktop Desktop application for Mattermost Mattermost is an open source platform for secure communication, collaboration, and orchestration of work across teams and tools. Mattermost is built specifically for software development and engineering use cases and integrates deeply with a rich ecosystem of third-party developer tools. Mattermost gives companies full control over their data; with self- hosted and private cloud deployment options and access to the source code, developers can contribute directly to a shared, flexible, and extensible platform built just for them. desktop https://mattermost.com amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install mattermost-desktop sudo apt install mattermost-desktop Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/mattermost-desktop.svg )](https://docs.wakemeops.com/packages/mattermost-desktop) < a href = \"https://docs.wakemeops.com/packages/mattermost-desktop\" > < img src = \"https://docs.wakemeops.com/badges/mattermost-desktop.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/mattermost-desktop.svg :target: https://docs.wakemeops.com/packages/mattermost-desktop","title":"mattermost-desktop"},{"location":"packages/mattermost-desktop/#mattermost-desktop","text":"Desktop application for Mattermost Mattermost is an open source platform for secure communication, collaboration, and orchestration of work across teams and tools. Mattermost is built specifically for software development and engineering use cases and integrates deeply with a rich ecosystem of third-party developer tools. Mattermost gives companies full control over their data; with self- hosted and private cloud deployment options and access to the source code, developers can contribute directly to a shared, flexible, and extensible platform built just for them. desktop https://mattermost.com amd64","title":"mattermost-desktop"},{"location":"packages/mattermost-desktop/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install mattermost-desktop sudo apt install mattermost-desktop","title":"Installation"},{"location":"packages/mattermost-desktop/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/mattermost-desktop.svg )](https://docs.wakemeops.com/packages/mattermost-desktop) < a href = \"https://docs.wakemeops.com/packages/mattermost-desktop\" > < img src = \"https://docs.wakemeops.com/badges/mattermost-desktop.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/mattermost-desktop.svg :target: https://docs.wakemeops.com/packages/mattermost-desktop","title":"Badge"},{"location":"packages/mdbook/","text":"mdbook Create book from markdown files mdBook is ideal for creating product or API documentation, tutorials, course materials or anything that requires a clean, easily navigable and customizable presentation. It features: An integrated search support Color syntax highlighting for code blocks for many different languages Theme files allow customizing the formatting of the output Preprocessors that provide extensions for custom syntax and modifying content Backends that can render the output to multiple formats terminal https://rust-lang.github.io/mdBook/ amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install mdbook sudo apt install mdbook Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ mdbook = 0 .4.18* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | mdbook=0.4.18* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/mdbook.svg )](https://docs.wakemeops.com/packages/mdbook) < a href = \"https://docs.wakemeops.com/packages/mdbook\" > < img src = \"https://docs.wakemeops.com/badges/mdbook.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/mdbook.svg :target: https://docs.wakemeops.com/packages/mdbook","title":"mdbook"},{"location":"packages/mdbook/#mdbook","text":"Create book from markdown files mdBook is ideal for creating product or API documentation, tutorials, course materials or anything that requires a clean, easily navigable and customizable presentation. It features: An integrated search support Color syntax highlighting for code blocks for many different languages Theme files allow customizing the formatting of the output Preprocessors that provide extensions for custom syntax and modifying content Backends that can render the output to multiple formats terminal https://rust-lang.github.io/mdBook/ amd64","title":"mdbook"},{"location":"packages/mdbook/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install mdbook sudo apt install mdbook","title":"Installation"},{"location":"packages/mdbook/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ mdbook = 0 .4.18* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | mdbook=0.4.18*","title":"Snippets"},{"location":"packages/mdbook/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/mdbook.svg )](https://docs.wakemeops.com/packages/mdbook) < a href = \"https://docs.wakemeops.com/packages/mdbook\" > < img src = \"https://docs.wakemeops.com/badges/mdbook.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/mdbook.svg :target: https://docs.wakemeops.com/packages/mdbook","title":"Badge"},{"location":"packages/mergestat/","text":"mergestat Enables SQL queries for data in git repositories Treat your source code and development history as data. Use SQL to explore and understand everything that goes into building and shipping software. terminal https://docs.mergestat.com amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install mergestat sudo apt install mergestat Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ mergestat = 0 .5.6* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | mergestat=0.5.6* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/mergestat.svg )](https://docs.wakemeops.com/packages/mergestat) < a href = \"https://docs.wakemeops.com/packages/mergestat\" > < img src = \"https://docs.wakemeops.com/badges/mergestat.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/mergestat.svg :target: https://docs.wakemeops.com/packages/mergestat","title":"mergestat"},{"location":"packages/mergestat/#mergestat","text":"Enables SQL queries for data in git repositories Treat your source code and development history as data. Use SQL to explore and understand everything that goes into building and shipping software. terminal https://docs.mergestat.com amd64","title":"mergestat"},{"location":"packages/mergestat/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install mergestat sudo apt install mergestat","title":"Installation"},{"location":"packages/mergestat/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ mergestat = 0 .5.6* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | mergestat=0.5.6*","title":"Snippets"},{"location":"packages/mergestat/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/mergestat.svg )](https://docs.wakemeops.com/packages/mergestat) < a href = \"https://docs.wakemeops.com/packages/mergestat\" > < img src = \"https://docs.wakemeops.com/badges/mergestat.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/mergestat.svg :target: https://docs.wakemeops.com/packages/mergestat","title":"Badge"},{"location":"packages/minikube/","text":"minikube Quickly set up a local Kubernetes cluster Focus on helping application developers and new Kubernetes users. Supports the latest Kubernetes release (+6 previous minor versions) Cross-platform (Linux, macOS, Windows) Deploy as a VM, a container, or on bare-metal Multiple container runtimes (CRI-O, containerd, docker) Docker API endpoint for blazing fast image pushes Advanced features such as LoadBalancer, filesystem mounts, and FeatureGates Addons for easily installed Kubernetes applications devops https://minikube.sigs.k8s.io arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install minikube sudo apt install minikube Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ minikube = 1 .25.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | minikube=1.25.2* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/minikube.svg )](https://docs.wakemeops.com/packages/minikube) < a href = \"https://docs.wakemeops.com/packages/minikube\" > < img src = \"https://docs.wakemeops.com/badges/minikube.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/minikube.svg :target: https://docs.wakemeops.com/packages/minikube","title":"minikube"},{"location":"packages/minikube/#minikube","text":"Quickly set up a local Kubernetes cluster Focus on helping application developers and new Kubernetes users. Supports the latest Kubernetes release (+6 previous minor versions) Cross-platform (Linux, macOS, Windows) Deploy as a VM, a container, or on bare-metal Multiple container runtimes (CRI-O, containerd, docker) Docker API endpoint for blazing fast image pushes Advanced features such as LoadBalancer, filesystem mounts, and FeatureGates Addons for easily installed Kubernetes applications devops https://minikube.sigs.k8s.io arm64 amd64 armhf","title":"minikube"},{"location":"packages/minikube/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install minikube sudo apt install minikube","title":"Installation"},{"location":"packages/minikube/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ minikube = 1 .25.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | minikube=1.25.2*","title":"Snippets"},{"location":"packages/minikube/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/minikube.svg )](https://docs.wakemeops.com/packages/minikube) < a href = \"https://docs.wakemeops.com/packages/minikube\" > < img src = \"https://docs.wakemeops.com/badges/minikube.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/minikube.svg :target: https://docs.wakemeops.com/packages/minikube","title":"Badge"},{"location":"packages/minio-client/","text":"minio-client Command-line interface for MinIO (mc) MinIO Client (mc) is a replacement for ls, cp, mkdir, diff and rsync commands for filesystems and object storage. devops https://min.io arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install minio-client sudo apt install minio-client Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ minio-client = 2022 -04-16T21-11-21Z* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | minio-client=2022-04-16T21-11-21Z* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/minio-client.svg )](https://docs.wakemeops.com/packages/minio-client) < a href = \"https://docs.wakemeops.com/packages/minio-client\" > < img src = \"https://docs.wakemeops.com/badges/minio-client.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/minio-client.svg :target: https://docs.wakemeops.com/packages/minio-client","title":"minio-client"},{"location":"packages/minio-client/#minio-client","text":"Command-line interface for MinIO (mc) MinIO Client (mc) is a replacement for ls, cp, mkdir, diff and rsync commands for filesystems and object storage. devops https://min.io arm64 amd64 armhf","title":"minio-client"},{"location":"packages/minio-client/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install minio-client sudo apt install minio-client","title":"Installation"},{"location":"packages/minio-client/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ minio-client = 2022 -04-16T21-11-21Z* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | minio-client=2022-04-16T21-11-21Z*","title":"Snippets"},{"location":"packages/minio-client/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/minio-client.svg )](https://docs.wakemeops.com/packages/minio-client) < a href = \"https://docs.wakemeops.com/packages/minio-client\" > < img src = \"https://docs.wakemeops.com/badges/minio-client.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/minio-client.svg :target: https://docs.wakemeops.com/packages/minio-client","title":"Badge"},{"location":"packages/minio-server/","text":"minio-server High performance, Kubernetes native object storage Standalone MinIO servers are best suited for early development and evaluation. Certain features such as versioning, object locking, and bucket replication require distributed deploying MinIO with Erasure Coding. devops https://min.io arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install minio-server sudo apt install minio-server Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ minio-server = 2022 -04-16T04-26-02Z* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | minio-server=2022-04-16T04-26-02Z* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/minio-server.svg )](https://docs.wakemeops.com/packages/minio-server) < a href = \"https://docs.wakemeops.com/packages/minio-server\" > < img src = \"https://docs.wakemeops.com/badges/minio-server.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/minio-server.svg :target: https://docs.wakemeops.com/packages/minio-server","title":"minio-server"},{"location":"packages/minio-server/#minio-server","text":"High performance, Kubernetes native object storage Standalone MinIO servers are best suited for early development and evaluation. Certain features such as versioning, object locking, and bucket replication require distributed deploying MinIO with Erasure Coding. devops https://min.io arm64 amd64 armhf","title":"minio-server"},{"location":"packages/minio-server/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install minio-server sudo apt install minio-server","title":"Installation"},{"location":"packages/minio-server/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ minio-server = 2022 -04-16T04-26-02Z* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | minio-server=2022-04-16T04-26-02Z*","title":"Snippets"},{"location":"packages/minio-server/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/minio-server.svg )](https://docs.wakemeops.com/packages/minio-server) < a href = \"https://docs.wakemeops.com/packages/minio-server\" > < img src = \"https://docs.wakemeops.com/badges/minio-server.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/minio-server.svg :target: https://docs.wakemeops.com/packages/minio-server","title":"Badge"},{"location":"packages/natscli/","text":"natscli The NATS Command Line Interface A command line utility to interact with and manage NATS. This utility replaces various past tools that were named in the form nats-sub and nats-pub, adds several new capabilities and support full JetStream management. devops https://github.com/nats-io/natscli arm64 amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install natscli sudo apt install natscli Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ natscli = 0 .0.26* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | natscli=0.0.26* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/natscli.svg )](https://docs.wakemeops.com/packages/natscli) < a href = \"https://docs.wakemeops.com/packages/natscli\" > < img src = \"https://docs.wakemeops.com/badges/natscli.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/natscli.svg :target: https://docs.wakemeops.com/packages/natscli","title":"natscli"},{"location":"packages/natscli/#natscli","text":"The NATS Command Line Interface A command line utility to interact with and manage NATS. This utility replaces various past tools that were named in the form nats-sub and nats-pub, adds several new capabilities and support full JetStream management. devops https://github.com/nats-io/natscli arm64 amd64","title":"natscli"},{"location":"packages/natscli/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install natscli sudo apt install natscli","title":"Installation"},{"location":"packages/natscli/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ natscli = 0 .0.26* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | natscli=0.0.26*","title":"Snippets"},{"location":"packages/natscli/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/natscli.svg )](https://docs.wakemeops.com/packages/natscli) < a href = \"https://docs.wakemeops.com/packages/natscli\" > < img src = \"https://docs.wakemeops.com/badges/natscli.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/natscli.svg :target: https://docs.wakemeops.com/packages/natscli","title":"Badge"},{"location":"packages/operator-sdk/","text":"operator-sdk SDK for building Kubernetes applications The Operator SDK makes it easier to build Kubernetes native applications, a process that can require deep, application-specific operational knowledge. devops https://sdk.operatorframework.io arm64 amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install operator-sdk sudo apt install operator-sdk Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ operator-sdk = 1 .21.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | operator-sdk=1.21.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/operator-sdk.svg )](https://docs.wakemeops.com/packages/operator-sdk) < a href = \"https://docs.wakemeops.com/packages/operator-sdk\" > < img src = \"https://docs.wakemeops.com/badges/operator-sdk.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/operator-sdk.svg :target: https://docs.wakemeops.com/packages/operator-sdk","title":"operator-sdk"},{"location":"packages/operator-sdk/#operator-sdk","text":"SDK for building Kubernetes applications The Operator SDK makes it easier to build Kubernetes native applications, a process that can require deep, application-specific operational knowledge. devops https://sdk.operatorframework.io arm64 amd64","title":"operator-sdk"},{"location":"packages/operator-sdk/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install operator-sdk sudo apt install operator-sdk","title":"Installation"},{"location":"packages/operator-sdk/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ operator-sdk = 1 .21.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | operator-sdk=1.21.0*","title":"Snippets"},{"location":"packages/operator-sdk/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/operator-sdk.svg )](https://docs.wakemeops.com/packages/operator-sdk) < a href = \"https://docs.wakemeops.com/packages/operator-sdk\" > < img src = \"https://docs.wakemeops.com/badges/operator-sdk.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/operator-sdk.svg :target: https://docs.wakemeops.com/packages/operator-sdk","title":"Badge"},{"location":"packages/ops2deb/","text":"ops2deb Debian packaging tool for portable applications Ops2deb is primarily designed to easily generate Debian packages for portable applications such as single binary applications and scripts. Packages are described using a simple configuration file format. Ops2deb can track new releases of upstream applications and automatically bump application versions in its configuration file. devops https://github.com/upciti/ops2deb amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install ops2deb sudo apt install ops2deb Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ ops2deb = 0 .30.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | ops2deb=0.30.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/ops2deb.svg )](https://docs.wakemeops.com/packages/ops2deb) < a href = \"https://docs.wakemeops.com/packages/ops2deb\" > < img src = \"https://docs.wakemeops.com/badges/ops2deb.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/ops2deb.svg :target: https://docs.wakemeops.com/packages/ops2deb","title":"ops2deb"},{"location":"packages/ops2deb/#ops2deb","text":"Debian packaging tool for portable applications Ops2deb is primarily designed to easily generate Debian packages for portable applications such as single binary applications and scripts. Packages are described using a simple configuration file format. Ops2deb can track new releases of upstream applications and automatically bump application versions in its configuration file. devops https://github.com/upciti/ops2deb amd64","title":"ops2deb"},{"location":"packages/ops2deb/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install ops2deb sudo apt install ops2deb","title":"Installation"},{"location":"packages/ops2deb/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ ops2deb = 0 .30.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | ops2deb=0.30.0*","title":"Snippets"},{"location":"packages/ops2deb/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/ops2deb.svg )](https://docs.wakemeops.com/packages/ops2deb) < a href = \"https://docs.wakemeops.com/packages/ops2deb\" > < img src = \"https://docs.wakemeops.com/badges/ops2deb.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/ops2deb.svg :target: https://docs.wakemeops.com/packages/ops2deb","title":"Badge"},{"location":"packages/packer/","text":"packer Create multi-platform machine images from a single source configuration Lightweight, runs on every major operating system, and is highly performant, creating machine images for multiple platforms in parallel. Packer comes out of the box with support for many platforms, the full list of which can be found at https://www.packer.io/docs/builders. devops https://www.packer.io arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install packer sudo apt install packer Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ packer = 1 .8.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | packer=1.8.1* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/packer.svg )](https://docs.wakemeops.com/packages/packer) < a href = \"https://docs.wakemeops.com/packages/packer\" > < img src = \"https://docs.wakemeops.com/badges/packer.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/packer.svg :target: https://docs.wakemeops.com/packages/packer","title":"packer"},{"location":"packages/packer/#packer","text":"Create multi-platform machine images from a single source configuration Lightweight, runs on every major operating system, and is highly performant, creating machine images for multiple platforms in parallel. Packer comes out of the box with support for many platforms, the full list of which can be found at https://www.packer.io/docs/builders. devops https://www.packer.io arm64 amd64 armhf","title":"packer"},{"location":"packages/packer/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install packer sudo apt install packer","title":"Installation"},{"location":"packages/packer/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ packer = 1 .8.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | packer=1.8.1*","title":"Snippets"},{"location":"packages/packer/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/packer.svg )](https://docs.wakemeops.com/packages/packer) < a href = \"https://docs.wakemeops.com/packages/packer\" > < img src = \"https://docs.wakemeops.com/badges/packer.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/packer.svg :target: https://docs.wakemeops.com/packages/packer","title":"Badge"},{"location":"packages/poetry/","text":"poetry Tool for dependency management and packaging in Python Poetry helps you declare, manage and install dependencies of Python projects, ensuring you have the right stack everywhere. dev https://python-poetry.org all amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install poetry sudo apt install poetry Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ poetry = 1 .1.13* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | poetry=1.1.13* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/poetry.svg )](https://docs.wakemeops.com/packages/poetry) < a href = \"https://docs.wakemeops.com/packages/poetry\" > < img src = \"https://docs.wakemeops.com/badges/poetry.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/poetry.svg :target: https://docs.wakemeops.com/packages/poetry","title":"poetry"},{"location":"packages/poetry/#poetry","text":"Tool for dependency management and packaging in Python Poetry helps you declare, manage and install dependencies of Python projects, ensuring you have the right stack everywhere. dev https://python-poetry.org all amd64","title":"poetry"},{"location":"packages/poetry/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install poetry sudo apt install poetry","title":"Installation"},{"location":"packages/poetry/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ poetry = 1 .1.13* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | poetry=1.1.13*","title":"Snippets"},{"location":"packages/poetry/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/poetry.svg )](https://docs.wakemeops.com/packages/poetry) < a href = \"https://docs.wakemeops.com/packages/poetry\" > < img src = \"https://docs.wakemeops.com/badges/poetry.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/poetry.svg :target: https://docs.wakemeops.com/packages/poetry","title":"Badge"},{"location":"packages/procs/","text":"procs Alternative in rust to 'ps' Procs has a colored and human-readable output, multi-column keyword search, additional information which are not supported by ps, a tree view, a watch mode and more... terminal https://github.com/dalance/procs amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install procs sudo apt install procs Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ procs = 0 .12.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | procs=0.12.1* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/procs.svg )](https://docs.wakemeops.com/packages/procs) < a href = \"https://docs.wakemeops.com/packages/procs\" > < img src = \"https://docs.wakemeops.com/badges/procs.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/procs.svg :target: https://docs.wakemeops.com/packages/procs","title":"procs"},{"location":"packages/procs/#procs","text":"Alternative in rust to 'ps' Procs has a colored and human-readable output, multi-column keyword search, additional information which are not supported by ps, a tree view, a watch mode and more... terminal https://github.com/dalance/procs amd64","title":"procs"},{"location":"packages/procs/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install procs sudo apt install procs","title":"Installation"},{"location":"packages/procs/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ procs = 0 .12.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | procs=0.12.1*","title":"Snippets"},{"location":"packages/procs/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/procs.svg )](https://docs.wakemeops.com/packages/procs) < a href = \"https://docs.wakemeops.com/packages/procs\" > < img src = \"https://docs.wakemeops.com/badges/procs.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/procs.svg :target: https://docs.wakemeops.com/packages/procs","title":"Badge"},{"location":"packages/pyenv/","text":"pyenv Simple Python version management Tool that lets you easily switch between multiple versions of Python. It's simple, unobtrusive, and follows the UNIX tradition of single-purpose tools that do one thing well. dev https://github.com/pyenv/pyenv all Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install pyenv sudo apt install pyenv Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ pyenv = 2 .3.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | pyenv=2.3.1* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/pyenv.svg )](https://docs.wakemeops.com/packages/pyenv) < a href = \"https://docs.wakemeops.com/packages/pyenv\" > < img src = \"https://docs.wakemeops.com/badges/pyenv.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/pyenv.svg :target: https://docs.wakemeops.com/packages/pyenv","title":"pyenv"},{"location":"packages/pyenv/#pyenv","text":"Simple Python version management Tool that lets you easily switch between multiple versions of Python. It's simple, unobtrusive, and follows the UNIX tradition of single-purpose tools that do one thing well. dev https://github.com/pyenv/pyenv all","title":"pyenv"},{"location":"packages/pyenv/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install pyenv sudo apt install pyenv","title":"Installation"},{"location":"packages/pyenv/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ pyenv = 2 .3.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | pyenv=2.3.1*","title":"Snippets"},{"location":"packages/pyenv/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/pyenv.svg )](https://docs.wakemeops.com/packages/pyenv) < a href = \"https://docs.wakemeops.com/packages/pyenv\" > < img src = \"https://docs.wakemeops.com/badges/pyenv.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/pyenv.svg :target: https://docs.wakemeops.com/packages/pyenv","title":"Badge"},{"location":"packages/pyoxidizer/","text":"pyoxidizer PyOxidizer is a utility for producing binaries that embed Python The over-arching goal of PyOxidizer is to make complex packaging and distribution problems simple so application maintainers can focus on building applications instead of toiling with build systems and packaging tools. dev https://pyoxidizer.readthedocs.io/en/latest/index.html amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install pyoxidizer sudo apt install pyoxidizer Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ pyoxidizer = 0 .18.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | pyoxidizer=0.18.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/pyoxidizer.svg )](https://docs.wakemeops.com/packages/pyoxidizer) < a href = \"https://docs.wakemeops.com/packages/pyoxidizer\" > < img src = \"https://docs.wakemeops.com/badges/pyoxidizer.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/pyoxidizer.svg :target: https://docs.wakemeops.com/packages/pyoxidizer","title":"pyoxidizer"},{"location":"packages/pyoxidizer/#pyoxidizer","text":"PyOxidizer is a utility for producing binaries that embed Python The over-arching goal of PyOxidizer is to make complex packaging and distribution problems simple so application maintainers can focus on building applications instead of toiling with build systems and packaging tools. dev https://pyoxidizer.readthedocs.io/en/latest/index.html amd64","title":"pyoxidizer"},{"location":"packages/pyoxidizer/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install pyoxidizer sudo apt install pyoxidizer","title":"Installation"},{"location":"packages/pyoxidizer/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ pyoxidizer = 0 .18.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | pyoxidizer=0.18.0*","title":"Snippets"},{"location":"packages/pyoxidizer/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/pyoxidizer.svg )](https://docs.wakemeops.com/packages/pyoxidizer) < a href = \"https://docs.wakemeops.com/packages/pyoxidizer\" > < img src = \"https://docs.wakemeops.com/badges/pyoxidizer.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/pyoxidizer.svg :target: https://docs.wakemeops.com/packages/pyoxidizer","title":"Badge"},{"location":"packages/rancher/","text":"rancher Command-line interface for rancher The Rancher Command Line Interface (CLI) is a unified tool for interacting with your Rancher Server. devops https://github.com/rancher/cli amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install rancher sudo apt install rancher Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ rancher = 2 .6.5* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | rancher=2.6.5* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/rancher.svg )](https://docs.wakemeops.com/packages/rancher) < a href = \"https://docs.wakemeops.com/packages/rancher\" > < img src = \"https://docs.wakemeops.com/badges/rancher.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/rancher.svg :target: https://docs.wakemeops.com/packages/rancher","title":"rancher"},{"location":"packages/rancher/#rancher","text":"Command-line interface for rancher The Rancher Command Line Interface (CLI) is a unified tool for interacting with your Rancher Server. devops https://github.com/rancher/cli amd64 armhf","title":"rancher"},{"location":"packages/rancher/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install rancher sudo apt install rancher","title":"Installation"},{"location":"packages/rancher/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ rancher = 2 .6.5* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | rancher=2.6.5*","title":"Snippets"},{"location":"packages/rancher/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/rancher.svg )](https://docs.wakemeops.com/packages/rancher) < a href = \"https://docs.wakemeops.com/packages/rancher\" > < img src = \"https://docs.wakemeops.com/badges/rancher.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/rancher.svg :target: https://docs.wakemeops.com/packages/rancher","title":"Badge"},{"location":"packages/rclone/","text":"rclone Rsync for cloud storage Rclone (\"rsync for cloud storage\") is a command-line program to sync files and directories to and from different cloud storage providers. devops https://rclone.org/ arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install rclone sudo apt install rclone Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ rclone = 1 .58.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | rclone=1.58.1* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/rclone.svg )](https://docs.wakemeops.com/packages/rclone) < a href = \"https://docs.wakemeops.com/packages/rclone\" > < img src = \"https://docs.wakemeops.com/badges/rclone.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/rclone.svg :target: https://docs.wakemeops.com/packages/rclone","title":"rclone"},{"location":"packages/rclone/#rclone","text":"Rsync for cloud storage Rclone (\"rsync for cloud storage\") is a command-line program to sync files and directories to and from different cloud storage providers. devops https://rclone.org/ arm64 amd64 armhf","title":"rclone"},{"location":"packages/rclone/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install rclone sudo apt install rclone","title":"Installation"},{"location":"packages/rclone/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ rclone = 1 .58.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | rclone=1.58.1*","title":"Snippets"},{"location":"packages/rclone/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/rclone.svg )](https://docs.wakemeops.com/packages/rclone) < a href = \"https://docs.wakemeops.com/packages/rclone\" > < img src = \"https://docs.wakemeops.com/badges/rclone.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/rclone.svg :target: https://docs.wakemeops.com/packages/rclone","title":"Badge"},{"location":"packages/ripgrep/","text":"ripgrep Recursively searches directories for a regex pattern ripgrep is a line-oriented search tool that recursively searches the current directory for a regex pattern. By default, ripgrep will respect gitignore rules and automatically skip hidden files/directories and binary files. ripgrep has first class support on Windows, macOS and Linux, with binary downloads available for every release. ripgrep is similar to other popular search tools like The Silver Searcher, ack and grep. terminal https://github.com/BurntSushi/ripgrep amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install ripgrep sudo apt install ripgrep Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ ripgrep = 13 .0.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | ripgrep=13.0.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/ripgrep.svg )](https://docs.wakemeops.com/packages/ripgrep) < a href = \"https://docs.wakemeops.com/packages/ripgrep\" > < img src = \"https://docs.wakemeops.com/badges/ripgrep.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/ripgrep.svg :target: https://docs.wakemeops.com/packages/ripgrep","title":"ripgrep"},{"location":"packages/ripgrep/#ripgrep","text":"Recursively searches directories for a regex pattern ripgrep is a line-oriented search tool that recursively searches the current directory for a regex pattern. By default, ripgrep will respect gitignore rules and automatically skip hidden files/directories and binary files. ripgrep has first class support on Windows, macOS and Linux, with binary downloads available for every release. ripgrep is similar to other popular search tools like The Silver Searcher, ack and grep. terminal https://github.com/BurntSushi/ripgrep amd64 armhf","title":"ripgrep"},{"location":"packages/ripgrep/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install ripgrep sudo apt install ripgrep","title":"Installation"},{"location":"packages/ripgrep/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ ripgrep = 13 .0.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | ripgrep=13.0.0*","title":"Snippets"},{"location":"packages/ripgrep/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/ripgrep.svg )](https://docs.wakemeops.com/packages/ripgrep) < a href = \"https://docs.wakemeops.com/packages/ripgrep\" > < img src = \"https://docs.wakemeops.com/badges/ripgrep.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/ripgrep.svg :target: https://docs.wakemeops.com/packages/ripgrep","title":"Badge"},{"location":"packages/scala-cli/","text":"scala-cli Command-line tool to interact with the Scala language Scala CLI is an experimental tool to run/compile/test Scala that aims at being a better scala command. It shares some similarities with build tools, but doesn't aim at supporting multi-module projects, nor to be extended via a task system. dev https://scala-cli.virtuslab.org/ amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install scala-cli sudo apt install scala-cli Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ scala-cli = 0 .1.6* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | scala-cli=0.1.6* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/scala-cli.svg )](https://docs.wakemeops.com/packages/scala-cli) < a href = \"https://docs.wakemeops.com/packages/scala-cli\" > < img src = \"https://docs.wakemeops.com/badges/scala-cli.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/scala-cli.svg :target: https://docs.wakemeops.com/packages/scala-cli","title":"scala-cli"},{"location":"packages/scala-cli/#scala-cli","text":"Command-line tool to interact with the Scala language Scala CLI is an experimental tool to run/compile/test Scala that aims at being a better scala command. It shares some similarities with build tools, but doesn't aim at supporting multi-module projects, nor to be extended via a task system. dev https://scala-cli.virtuslab.org/ amd64","title":"scala-cli"},{"location":"packages/scala-cli/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install scala-cli sudo apt install scala-cli","title":"Installation"},{"location":"packages/scala-cli/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ scala-cli = 0 .1.6* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | scala-cli=0.1.6*","title":"Snippets"},{"location":"packages/scala-cli/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/scala-cli.svg )](https://docs.wakemeops.com/packages/scala-cli) < a href = \"https://docs.wakemeops.com/packages/scala-cli\" > < img src = \"https://docs.wakemeops.com/badges/scala-cli.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/scala-cli.svg :target: https://docs.wakemeops.com/packages/scala-cli","title":"Badge"},{"location":"packages/scw/","text":"scw Command Line Interface for Scaleway Scaleway CLI is a tool to help you pilot your Scaleway infrastructure directly from your terminal. devops https://github.com/scaleway/scaleway-cli amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install scw sudo apt install scw Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ scw = 2 .4.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | scw=2.4.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/scw.svg )](https://docs.wakemeops.com/packages/scw) < a href = \"https://docs.wakemeops.com/packages/scw\" > < img src = \"https://docs.wakemeops.com/badges/scw.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/scw.svg :target: https://docs.wakemeops.com/packages/scw","title":"scw"},{"location":"packages/scw/#scw","text":"Command Line Interface for Scaleway Scaleway CLI is a tool to help you pilot your Scaleway infrastructure directly from your terminal. devops https://github.com/scaleway/scaleway-cli amd64","title":"scw"},{"location":"packages/scw/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install scw sudo apt install scw","title":"Installation"},{"location":"packages/scw/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ scw = 2 .4.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | scw=2.4.0*","title":"Snippets"},{"location":"packages/scw/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/scw.svg )](https://docs.wakemeops.com/packages/scw) < a href = \"https://docs.wakemeops.com/packages/scw\" > < img src = \"https://docs.wakemeops.com/badges/scw.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/scw.svg :target: https://docs.wakemeops.com/packages/scw","title":"Badge"},{"location":"packages/skaffold/","text":"skaffold Easy and repeatable Kubernetes development Command line tool that facilitates continuous development for Kubernetes applications. You can iterate on your application source code locally then deploy to local or remote Kubernetes clusters. Skaffold handles the workflow for building, pushing and deploying your application. It also provides building blocks and describe customizations for a CI/CD pipeline. devops https://skaffold.dev/ arm64 amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install skaffold sudo apt install skaffold Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ skaffold = 1 .38.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | skaffold=1.38.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/skaffold.svg )](https://docs.wakemeops.com/packages/skaffold) < a href = \"https://docs.wakemeops.com/packages/skaffold\" > < img src = \"https://docs.wakemeops.com/badges/skaffold.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/skaffold.svg :target: https://docs.wakemeops.com/packages/skaffold","title":"skaffold"},{"location":"packages/skaffold/#skaffold","text":"Easy and repeatable Kubernetes development Command line tool that facilitates continuous development for Kubernetes applications. You can iterate on your application source code locally then deploy to local or remote Kubernetes clusters. Skaffold handles the workflow for building, pushing and deploying your application. It also provides building blocks and describe customizations for a CI/CD pipeline. devops https://skaffold.dev/ arm64 amd64","title":"skaffold"},{"location":"packages/skaffold/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install skaffold sudo apt install skaffold","title":"Installation"},{"location":"packages/skaffold/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ skaffold = 1 .38.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | skaffold=1.38.0*","title":"Snippets"},{"location":"packages/skaffold/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/skaffold.svg )](https://docs.wakemeops.com/packages/skaffold) < a href = \"https://docs.wakemeops.com/packages/skaffold\" > < img src = \"https://docs.wakemeops.com/badges/skaffold.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/skaffold.svg :target: https://docs.wakemeops.com/packages/skaffold","title":"Badge"},{"location":"packages/skim/","text":"skim Fuzzy Finder in rust Half of our life is spent on navigation: files, lines, commands... You need skim! It is a general fuzzy finder that saves you time. terminal https://github.com/lotabout/skim amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install skim sudo apt install skim Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ skim = 0 .9.4* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | skim=0.9.4* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/skim.svg )](https://docs.wakemeops.com/packages/skim) < a href = \"https://docs.wakemeops.com/packages/skim\" > < img src = \"https://docs.wakemeops.com/badges/skim.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/skim.svg :target: https://docs.wakemeops.com/packages/skim","title":"skim"},{"location":"packages/skim/#skim","text":"Fuzzy Finder in rust Half of our life is spent on navigation: files, lines, commands... You need skim! It is a general fuzzy finder that saves you time. terminal https://github.com/lotabout/skim amd64 armhf","title":"skim"},{"location":"packages/skim/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install skim sudo apt install skim","title":"Installation"},{"location":"packages/skim/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ skim = 0 .9.4* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | skim=0.9.4*","title":"Snippets"},{"location":"packages/skim/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/skim.svg )](https://docs.wakemeops.com/packages/skim) < a href = \"https://docs.wakemeops.com/packages/skim\" > < img src = \"https://docs.wakemeops.com/badges/skim.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/skim.svg :target: https://docs.wakemeops.com/packages/skim","title":"Badge"},{"location":"packages/stern/","text":"stern Multi pod and container log tailing for Kubernetes Allows you to tail multiple pods on Kubernetes and multiple containers within the pod. Each result is color coded for quicker debugging. devops https://github.com/wercker/stern amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install stern sudo apt install stern Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ stern = 1 .11.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | stern=1.11.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/stern.svg )](https://docs.wakemeops.com/packages/stern) < a href = \"https://docs.wakemeops.com/packages/stern\" > < img src = \"https://docs.wakemeops.com/badges/stern.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/stern.svg :target: https://docs.wakemeops.com/packages/stern","title":"stern"},{"location":"packages/stern/#stern","text":"Multi pod and container log tailing for Kubernetes Allows you to tail multiple pods on Kubernetes and multiple containers within the pod. Each result is color coded for quicker debugging. devops https://github.com/wercker/stern amd64","title":"stern"},{"location":"packages/stern/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install stern sudo apt install stern","title":"Installation"},{"location":"packages/stern/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ stern = 1 .11.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | stern=1.11.0*","title":"Snippets"},{"location":"packages/stern/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/stern.svg )](https://docs.wakemeops.com/packages/stern) < a href = \"https://docs.wakemeops.com/packages/stern\" > < img src = \"https://docs.wakemeops.com/badges/stern.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/stern.svg :target: https://docs.wakemeops.com/packages/stern","title":"Badge"},{"location":"packages/telepresence/","text":"telepresence Fast, local development for kubernetes and openshift microservices Open source tool that lets you run a single service locally, while connecting that service to a remote Kubernetes cluster. This lets developers working on multi-service applications to: Do fast local development of a single service, even if that service depends on other services in your cluster. Make a change to your service, save, and you can immediately see the new service in action. Use any tool installed locally to test/debug/edit your service. For example, you can use a debugger or IDE! Make your local development machine operate as if it's part of your Kubernetes cluster. If you've got an application on your machine that you want to run against a service in the cluster -- it's easy to do. devops https://www.telepresence.io/ arm64 amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install telepresence sudo apt install telepresence Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ telepresence = 2 .6.5* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | telepresence=2.6.5* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/telepresence.svg )](https://docs.wakemeops.com/packages/telepresence) < a href = \"https://docs.wakemeops.com/packages/telepresence\" > < img src = \"https://docs.wakemeops.com/badges/telepresence.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/telepresence.svg :target: https://docs.wakemeops.com/packages/telepresence","title":"telepresence"},{"location":"packages/telepresence/#telepresence","text":"Fast, local development for kubernetes and openshift microservices Open source tool that lets you run a single service locally, while connecting that service to a remote Kubernetes cluster. This lets developers working on multi-service applications to: Do fast local development of a single service, even if that service depends on other services in your cluster. Make a change to your service, save, and you can immediately see the new service in action. Use any tool installed locally to test/debug/edit your service. For example, you can use a debugger or IDE! Make your local development machine operate as if it's part of your Kubernetes cluster. If you've got an application on your machine that you want to run against a service in the cluster -- it's easy to do. devops https://www.telepresence.io/ arm64 amd64","title":"telepresence"},{"location":"packages/telepresence/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install telepresence sudo apt install telepresence","title":"Installation"},{"location":"packages/telepresence/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ telepresence = 2 .6.5* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | telepresence=2.6.5*","title":"Snippets"},{"location":"packages/telepresence/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/telepresence.svg )](https://docs.wakemeops.com/packages/telepresence) < a href = \"https://docs.wakemeops.com/packages/telepresence\" > < img src = \"https://docs.wakemeops.com/badges/telepresence.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/telepresence.svg :target: https://docs.wakemeops.com/packages/telepresence","title":"Badge"},{"location":"packages/terraform/","text":"terraform Tool for building, changing, and versioning infrastructure safely Terraform is an open-source infrastructure as code software tool that provides a consistent CLI workflow to manage hundreds of cloud services. Terraform codifies cloud APIs into declarative configuration files. Terraform can manage existing and popular service providers as well as custom in-house solutions. devops https://www.terraform.io arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install terraform sudo apt install terraform Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ terraform = 1 .2.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | terraform=1.2.2* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/terraform.svg )](https://docs.wakemeops.com/packages/terraform) < a href = \"https://docs.wakemeops.com/packages/terraform\" > < img src = \"https://docs.wakemeops.com/badges/terraform.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/terraform.svg :target: https://docs.wakemeops.com/packages/terraform","title":"terraform"},{"location":"packages/terraform/#terraform","text":"Tool for building, changing, and versioning infrastructure safely Terraform is an open-source infrastructure as code software tool that provides a consistent CLI workflow to manage hundreds of cloud services. Terraform codifies cloud APIs into declarative configuration files. Terraform can manage existing and popular service providers as well as custom in-house solutions. devops https://www.terraform.io arm64 amd64 armhf","title":"terraform"},{"location":"packages/terraform/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install terraform sudo apt install terraform","title":"Installation"},{"location":"packages/terraform/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ terraform = 1 .2.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | terraform=1.2.2*","title":"Snippets"},{"location":"packages/terraform/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/terraform.svg )](https://docs.wakemeops.com/packages/terraform) < a href = \"https://docs.wakemeops.com/packages/terraform\" > < img src = \"https://docs.wakemeops.com/badges/terraform.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/terraform.svg :target: https://docs.wakemeops.com/packages/terraform","title":"Badge"},{"location":"packages/terraform-docs/","text":"terraform-docs Generate documentation from Terraform modules in various output formats Utility to generate documentation from Terraform modules in various output formats. devops https://terraform-docs.io arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install terraform-docs sudo apt install terraform-docs Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ terraform-docs = 0 .16.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | terraform-docs=0.16.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/terraform-docs.svg )](https://docs.wakemeops.com/packages/terraform-docs) < a href = \"https://docs.wakemeops.com/packages/terraform-docs\" > < img src = \"https://docs.wakemeops.com/badges/terraform-docs.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/terraform-docs.svg :target: https://docs.wakemeops.com/packages/terraform-docs","title":"terraform-docs"},{"location":"packages/terraform-docs/#terraform-docs","text":"Generate documentation from Terraform modules in various output formats Utility to generate documentation from Terraform modules in various output formats. devops https://terraform-docs.io arm64 amd64 armhf","title":"terraform-docs"},{"location":"packages/terraform-docs/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install terraform-docs sudo apt install terraform-docs","title":"Installation"},{"location":"packages/terraform-docs/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ terraform-docs = 0 .16.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | terraform-docs=0.16.0*","title":"Snippets"},{"location":"packages/terraform-docs/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/terraform-docs.svg )](https://docs.wakemeops.com/packages/terraform-docs) < a href = \"https://docs.wakemeops.com/packages/terraform-docs\" > < img src = \"https://docs.wakemeops.com/badges/terraform-docs.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/terraform-docs.svg :target: https://docs.wakemeops.com/packages/terraform-docs","title":"Badge"},{"location":"packages/terragrunt/","text":"terragrunt Provides extra tools for working with multiple Terraform modules Terragrunt is a thin wrapper for Terraform that provides extra tools for keeping your Terraform configurations DRY, working with multiple Terraform modules, and managing remote state. devops https://terragrunt.gruntwork.io/ arm64 amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install terragrunt sudo apt install terragrunt Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ terragrunt = 0 .37.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | terragrunt=0.37.1* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/terragrunt.svg )](https://docs.wakemeops.com/packages/terragrunt) < a href = \"https://docs.wakemeops.com/packages/terragrunt\" > < img src = \"https://docs.wakemeops.com/badges/terragrunt.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/terragrunt.svg :target: https://docs.wakemeops.com/packages/terragrunt","title":"terragrunt"},{"location":"packages/terragrunt/#terragrunt","text":"Provides extra tools for working with multiple Terraform modules Terragrunt is a thin wrapper for Terraform that provides extra tools for keeping your Terraform configurations DRY, working with multiple Terraform modules, and managing remote state. devops https://terragrunt.gruntwork.io/ arm64 amd64","title":"terragrunt"},{"location":"packages/terragrunt/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install terragrunt sudo apt install terragrunt","title":"Installation"},{"location":"packages/terragrunt/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ terragrunt = 0 .37.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | terragrunt=0.37.1*","title":"Snippets"},{"location":"packages/terragrunt/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/terragrunt.svg )](https://docs.wakemeops.com/packages/terragrunt) < a href = \"https://docs.wakemeops.com/packages/terragrunt\" > < img src = \"https://docs.wakemeops.com/badges/terragrunt.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/terragrunt.svg :target: https://docs.wakemeops.com/packages/terragrunt","title":"Badge"},{"location":"packages/tokei/","text":"tokei Count your code, quickly Tokei is a program that displays statistics about your code. Tokei will show the number of files, total lines within those files and code, comments, and blanks grouped by language. terminal https://github.com/XAMPPRocky/tokei arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install tokei sudo apt install tokei Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ tokei = 12 .1.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | tokei=12.1.2* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/tokei.svg )](https://docs.wakemeops.com/packages/tokei) < a href = \"https://docs.wakemeops.com/packages/tokei\" > < img src = \"https://docs.wakemeops.com/badges/tokei.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/tokei.svg :target: https://docs.wakemeops.com/packages/tokei","title":"tokei"},{"location":"packages/tokei/#tokei","text":"Count your code, quickly Tokei is a program that displays statistics about your code. Tokei will show the number of files, total lines within those files and code, comments, and blanks grouped by language. terminal https://github.com/XAMPPRocky/tokei arm64 amd64 armhf","title":"tokei"},{"location":"packages/tokei/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install tokei sudo apt install tokei","title":"Installation"},{"location":"packages/tokei/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ tokei = 12 .1.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | tokei=12.1.2*","title":"Snippets"},{"location":"packages/tokei/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/tokei.svg )](https://docs.wakemeops.com/packages/tokei) < a href = \"https://docs.wakemeops.com/packages/tokei\" > < img src = \"https://docs.wakemeops.com/badges/tokei.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/tokei.svg :target: https://docs.wakemeops.com/packages/tokei","title":"Badge"},{"location":"packages/trivy/","text":"trivy Vulnerability and misconfiguration scanner Scanner for vulnerabilities in container images, file systems, and Git repositories, as well as for configuration issues secops https://www.aquasec.com/products/trivy/ arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install trivy sudo apt install trivy Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ trivy = 0 .28.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | trivy=0.28.1* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/trivy.svg )](https://docs.wakemeops.com/packages/trivy) < a href = \"https://docs.wakemeops.com/packages/trivy\" > < img src = \"https://docs.wakemeops.com/badges/trivy.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/trivy.svg :target: https://docs.wakemeops.com/packages/trivy","title":"trivy"},{"location":"packages/trivy/#trivy","text":"Vulnerability and misconfiguration scanner Scanner for vulnerabilities in container images, file systems, and Git repositories, as well as for configuration issues secops https://www.aquasec.com/products/trivy/ arm64 amd64 armhf","title":"trivy"},{"location":"packages/trivy/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install trivy sudo apt install trivy","title":"Installation"},{"location":"packages/trivy/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ trivy = 0 .28.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | trivy=0.28.1*","title":"Snippets"},{"location":"packages/trivy/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/trivy.svg )](https://docs.wakemeops.com/packages/trivy) < a href = \"https://docs.wakemeops.com/packages/trivy\" > < img src = \"https://docs.wakemeops.com/badges/trivy.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/trivy.svg :target: https://docs.wakemeops.com/packages/trivy","title":"Badge"},{"location":"packages/vault/","text":"vault Tool to create, manage and store secrets A secret is anything that you want to tightly control access to, such as API keys, passwords, or certificates. Vault provides a unified interface to any secret, while providing tight access control and recording a detailed audit log. secops https://www.hashicorp.com/products/vault arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install vault sudo apt install vault Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ vault = 1 .10.3* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | vault=1.10.3* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/vault.svg )](https://docs.wakemeops.com/packages/vault) < a href = \"https://docs.wakemeops.com/packages/vault\" > < img src = \"https://docs.wakemeops.com/badges/vault.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/vault.svg :target: https://docs.wakemeops.com/packages/vault","title":"vault"},{"location":"packages/vault/#vault","text":"Tool to create, manage and store secrets A secret is anything that you want to tightly control access to, such as API keys, passwords, or certificates. Vault provides a unified interface to any secret, while providing tight access control and recording a detailed audit log. secops https://www.hashicorp.com/products/vault arm64 amd64 armhf","title":"vault"},{"location":"packages/vault/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install vault sudo apt install vault","title":"Installation"},{"location":"packages/vault/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ vault = 1 .10.3* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | vault=1.10.3*","title":"Snippets"},{"location":"packages/vault/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/vault.svg )](https://docs.wakemeops.com/packages/vault) < a href = \"https://docs.wakemeops.com/packages/vault\" > < img src = \"https://docs.wakemeops.com/badges/vault.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/vault.svg :target: https://docs.wakemeops.com/packages/vault","title":"Badge"},{"location":"packages/vault-env/","text":"vault-env Exec a process with Vault sourced env vars Bank-Vaults tool inspired by vaultenv and envconsul to run a process with environment variables from Vault. devops https://banzaicloud.com/products/bank-vaults/ arm64 amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install vault-env sudo apt install vault-env Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ vault-env = 1 .15.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | vault-env=1.15.2* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/vault-env.svg )](https://docs.wakemeops.com/packages/vault-env) < a href = \"https://docs.wakemeops.com/packages/vault-env\" > < img src = \"https://docs.wakemeops.com/badges/vault-env.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/vault-env.svg :target: https://docs.wakemeops.com/packages/vault-env","title":"vault-env"},{"location":"packages/vault-env/#vault-env","text":"Exec a process with Vault sourced env vars Bank-Vaults tool inspired by vaultenv and envconsul to run a process with environment variables from Vault. devops https://banzaicloud.com/products/bank-vaults/ arm64 amd64","title":"vault-env"},{"location":"packages/vault-env/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install vault-env sudo apt install vault-env","title":"Installation"},{"location":"packages/vault-env/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ vault-env = 1 .15.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | vault-env=1.15.2*","title":"Snippets"},{"location":"packages/vault-env/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/vault-env.svg )](https://docs.wakemeops.com/packages/vault-env) < a href = \"https://docs.wakemeops.com/packages/vault-env\" > < img src = \"https://docs.wakemeops.com/badges/vault-env.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/vault-env.svg :target: https://docs.wakemeops.com/packages/vault-env","title":"Badge"},{"location":"packages/velero/","text":"velero Backup and migrate Kubernetes applications and their persistent volumes Velero (formerly Heptio Ark) gives you tools to back up and restore your Kubernetes cluster resources and persistent volumes. devops https://velero.io arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install velero sudo apt install velero Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ velero = 1 .8.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | velero=1.8.1* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/velero.svg )](https://docs.wakemeops.com/packages/velero) < a href = \"https://docs.wakemeops.com/packages/velero\" > < img src = \"https://docs.wakemeops.com/badges/velero.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/velero.svg :target: https://docs.wakemeops.com/packages/velero","title":"velero"},{"location":"packages/velero/#velero","text":"Backup and migrate Kubernetes applications and their persistent volumes Velero (formerly Heptio Ark) gives you tools to back up and restore your Kubernetes cluster resources and persistent volumes. devops https://velero.io arm64 amd64 armhf","title":"velero"},{"location":"packages/velero/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install velero sudo apt install velero","title":"Installation"},{"location":"packages/velero/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ velero = 1 .8.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | velero=1.8.1*","title":"Snippets"},{"location":"packages/velero/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/velero.svg )](https://docs.wakemeops.com/packages/velero) < a href = \"https://docs.wakemeops.com/packages/velero\" > < img src = \"https://docs.wakemeops.com/badges/velero.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/velero.svg :target: https://docs.wakemeops.com/packages/velero","title":"Badge"},{"location":"packages/vuls-scanner/","text":"vuls-scanner Agent-less vulnerability scanner Vuls is open-source, agent-less vulnerability scanner based on information from NVD, OVAL, etc. secops https://vuls.io/ arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install vuls-scanner sudo apt install vuls-scanner Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ vuls-scanner = 0 .19.7* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | vuls-scanner=0.19.7* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/vuls-scanner.svg )](https://docs.wakemeops.com/packages/vuls-scanner) < a href = \"https://docs.wakemeops.com/packages/vuls-scanner\" > < img src = \"https://docs.wakemeops.com/badges/vuls-scanner.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/vuls-scanner.svg :target: https://docs.wakemeops.com/packages/vuls-scanner","title":"vuls-scanner"},{"location":"packages/vuls-scanner/#vuls-scanner","text":"Agent-less vulnerability scanner Vuls is open-source, agent-less vulnerability scanner based on information from NVD, OVAL, etc. secops https://vuls.io/ arm64 amd64 armhf","title":"vuls-scanner"},{"location":"packages/vuls-scanner/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install vuls-scanner sudo apt install vuls-scanner","title":"Installation"},{"location":"packages/vuls-scanner/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ vuls-scanner = 0 .19.7* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | vuls-scanner=0.19.7*","title":"Snippets"},{"location":"packages/vuls-scanner/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/vuls-scanner.svg )](https://docs.wakemeops.com/packages/vuls-scanner) < a href = \"https://docs.wakemeops.com/packages/vuls-scanner\" > < img src = \"https://docs.wakemeops.com/badges/vuls-scanner.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/vuls-scanner.svg :target: https://docs.wakemeops.com/packages/vuls-scanner","title":"Badge"},{"location":"packages/wakemebot/","text":"wakemebot Bunch of tools used by our beloved wakemebot Don't mind this package, you probably don't need it unless you are working on wakemeops itself. It contains the glue needed between aptly (APT repository management), ops2deb (Debian package generation) and mkdocs (wakemeops documentation). devops https://github.com/upciti/wakemebot amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install wakemebot sudo apt install wakemebot Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ wakemebot = 3 .1.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | wakemebot=3.1.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/wakemebot.svg )](https://docs.wakemeops.com/packages/wakemebot) < a href = \"https://docs.wakemeops.com/packages/wakemebot\" > < img src = \"https://docs.wakemeops.com/badges/wakemebot.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/wakemebot.svg :target: https://docs.wakemeops.com/packages/wakemebot","title":"wakemebot"},{"location":"packages/wakemebot/#wakemebot","text":"Bunch of tools used by our beloved wakemebot Don't mind this package, you probably don't need it unless you are working on wakemeops itself. It contains the glue needed between aptly (APT repository management), ops2deb (Debian package generation) and mkdocs (wakemeops documentation). devops https://github.com/upciti/wakemebot amd64","title":"wakemebot"},{"location":"packages/wakemebot/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install wakemebot sudo apt install wakemebot","title":"Installation"},{"location":"packages/wakemebot/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ wakemebot = 3 .1.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | wakemebot=3.1.0*","title":"Snippets"},{"location":"packages/wakemebot/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/wakemebot.svg )](https://docs.wakemeops.com/packages/wakemebot) < a href = \"https://docs.wakemeops.com/packages/wakemebot\" > < img src = \"https://docs.wakemeops.com/badges/wakemebot.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/wakemebot.svg :target: https://docs.wakemeops.com/packages/wakemebot","title":"Badge"},{"location":"packages/waypoint/","text":"waypoint Build, deploy, and release any application on any platform Allows developers to define their application build, deploy, and release lifecycle as code, reducing the time to deliver deployments through a consistent and repeatable workflow. devops https://www.waypointproject.io amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install waypoint sudo apt install waypoint Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ waypoint = 0 .8.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | waypoint=0.8.2* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/waypoint.svg )](https://docs.wakemeops.com/packages/waypoint) < a href = \"https://docs.wakemeops.com/packages/waypoint\" > < img src = \"https://docs.wakemeops.com/badges/waypoint.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/waypoint.svg :target: https://docs.wakemeops.com/packages/waypoint","title":"waypoint"},{"location":"packages/waypoint/#waypoint","text":"Build, deploy, and release any application on any platform Allows developers to define their application build, deploy, and release lifecycle as code, reducing the time to deliver deployments through a consistent and repeatable workflow. devops https://www.waypointproject.io amd64 armhf","title":"waypoint"},{"location":"packages/waypoint/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install waypoint sudo apt install waypoint","title":"Installation"},{"location":"packages/waypoint/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ waypoint = 0 .8.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | waypoint=0.8.2*","title":"Snippets"},{"location":"packages/waypoint/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/waypoint.svg )](https://docs.wakemeops.com/packages/waypoint) < a href = \"https://docs.wakemeops.com/packages/waypoint\" > < img src = \"https://docs.wakemeops.com/badges/waypoint.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/waypoint.svg :target: https://docs.wakemeops.com/packages/waypoint","title":"Badge"},{"location":"packages/xh/","text":"xh User-friendly and fast tool for sending HTTP requests xh reimplements as much as possible of HTTPie's excellent design, with a focus on improved performance. terminal https://github.com/ducaale/xh amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install xh sudo apt install xh Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ xh = 0 .16.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | xh=0.16.1* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/xh.svg )](https://docs.wakemeops.com/packages/xh) < a href = \"https://docs.wakemeops.com/packages/xh\" > < img src = \"https://docs.wakemeops.com/badges/xh.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/xh.svg :target: https://docs.wakemeops.com/packages/xh","title":"xh"},{"location":"packages/xh/#xh","text":"User-friendly and fast tool for sending HTTP requests xh reimplements as much as possible of HTTPie's excellent design, with a focus on improved performance. terminal https://github.com/ducaale/xh amd64 armhf","title":"xh"},{"location":"packages/xh/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install xh sudo apt install xh","title":"Installation"},{"location":"packages/xh/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ xh = 0 .16.1* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | xh=0.16.1*","title":"Snippets"},{"location":"packages/xh/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/xh.svg )](https://docs.wakemeops.com/packages/xh) < a href = \"https://docs.wakemeops.com/packages/xh\" > < img src = \"https://docs.wakemeops.com/badges/xh.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/xh.svg :target: https://docs.wakemeops.com/packages/xh","title":"Badge"},{"location":"packages/xsv/","text":"xsv A fast CSV command line toolkit xsv is a command line program for indexing, slicing, analyzing, splitting and joining CSV files. terminal https://github.com/BurntSushi/xsv amd64 Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install xsv sudo apt install xsv Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ xsv = 0 .13.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | xsv=0.13.0* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/xsv.svg )](https://docs.wakemeops.com/packages/xsv) < a href = \"https://docs.wakemeops.com/packages/xsv\" > < img src = \"https://docs.wakemeops.com/badges/xsv.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/xsv.svg :target: https://docs.wakemeops.com/packages/xsv","title":"xsv"},{"location":"packages/xsv/#xsv","text":"A fast CSV command line toolkit xsv is a command line program for indexing, slicing, analyzing, splitting and joining CSV files. terminal https://github.com/BurntSushi/xsv amd64","title":"xsv"},{"location":"packages/xsv/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install xsv sudo apt install xsv","title":"Installation"},{"location":"packages/xsv/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ xsv = 0 .13.0* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | xsv=0.13.0*","title":"Snippets"},{"location":"packages/xsv/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/xsv.svg )](https://docs.wakemeops.com/packages/xsv) < a href = \"https://docs.wakemeops.com/packages/xsv\" > < img src = \"https://docs.wakemeops.com/badges/xsv.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/xsv.svg :target: https://docs.wakemeops.com/packages/xsv","title":"Badge"},{"location":"packages/yq/","text":"yq Portable command-line YAML processor Lightweight and portable command-line YAML processor. yq uses jq like syntax but works with yaml files as well as json. It doesn't yet support everything jq does - but it does support the most common operations and functions, and more is being added continuously. terminal https://github.com/mikefarah/yq arm64 amd64 armhf Installation 1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install yq sudo apt install yq Snippets Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ yq = 4 .25.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | yq=4.25.2* Badge Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/yq.svg )](https://docs.wakemeops.com/packages/yq) < a href = \"https://docs.wakemeops.com/packages/yq\" > < img src = \"https://docs.wakemeops.com/badges/yq.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/yq.svg :target: https://docs.wakemeops.com/packages/yq","title":"yq"},{"location":"packages/yq/#yq","text":"Portable command-line YAML processor Lightweight and portable command-line YAML processor. yq uses jq like syntax but works with yaml files as well as json. It doesn't yet support everything jq does - but it does support the most common operations and functions, and more is being added continuously. terminal https://github.com/mikefarah/yq arm64 amd64 armhf","title":"yq"},{"location":"packages/yq/#installation","text":"1. Add WakeMeOps repository curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash 2. Install yq sudo apt install yq","title":"Installation"},{"location":"packages/yq/#snippets","text":"Dockerfile Github Action FROM wakemeops/minideb:bullseye RUN install_packages \\ yq = 4 .25.2* USER 1001 - name : Install dependencies uses : upciti/wakemeops-action@v1 with : packages : | yq=4.25.2*","title":"Snippets"},{"location":"packages/yq/#badge","text":"Markdown HTML RST [ ![WakeMeOps ]( https://docs.wakemeops.com/badges/yq.svg )](https://docs.wakemeops.com/packages/yq) < a href = \"https://docs.wakemeops.com/packages/yq\" > < img src = \"https://docs.wakemeops.com/badges/yq.svg\" /> </ a > .. image :: https://docs.wakemeops.com/badges/yq.svg :target: https://docs.wakemeops.com/packages/yq","title":"Badge"}]}